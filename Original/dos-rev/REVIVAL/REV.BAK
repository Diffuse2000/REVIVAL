#include "Rev.H"

char *ModuleBuf;

void Destroy_Scene(Scene *Sc)
{
	TriMesh *Tri;
	long total = 0,f;

//	printf("Shootin' scene...\n");
	for(Tri=Sc->TriMeshHead;Tri;Tri=Tri->Next)
	{
		if (Tri->VIndex>5||Tri->FIndex>5)
		{
			delete Tri->Verts;
			delete Tri->Faces;
			f = sizeof(Vertex)*Tri->VIndex+sizeof(Face)*Tri->FIndex;
			total += f;
//			printf("Freed %d Bytes from mesh killing\n",f);
		}
	}
	for(Material *Mat = MatLib;Mat;Mat=Mat->Next)
	{
		if (Mat->RelScene == Sc)
			if (Mat->Txtr&&Mat->Txtr->Data)
			{
				 delete Mat->Txtr->Data;
				 Mat->Txtr->Data = NULL;
				 total += 262144;
//				 printf("Freed 262144 Bytes from Texture killing\n");
			}
	}
//	printf("%d Frags\n",total);

}


void Initialize_System()
{
	LogFile = fopen("Runtime.LOG","wt");

	if (!FDS_Init(320,240,32))    // Initialize FDS
	{
		printf("Initializing failed! Crashing to OS\n");
		exit(1);
	}

#ifdef Play_Music
	ModuleBuf = LoadARJ("Music\\Music.ARJ","Revival.XM");
	Initialize_Module(ModuleBuf);
#endif
//	Generate_RGBFlares();
	if (BPP==8) Materials_Remap_Aligned();
//  InitMouse();
	// all Hardwired Initializations complete
}

void Scan_MaterialLib()
{
	printf("Scanning MatLib\n");
	for(Material *M=MatLib;M;M=M->Next)
		printf("Material %s at Scene %xH\n",M->Name,(DWord)M->RelScene);
}

void main(int argc,char *argv[])
{
	Initialize_System();

//	printf("MEM = %d\n",DPMI_Free_Memory());
//	Initialize_Credits();
//	printf("[Credits]MEM = %d\n",DPMI_Free_Memory());

//	printf("[City]MEM = %d\n",DPMI_Free_Memory());
//
//	printf("[Chase]MEM = %d\n",DPMI_Free_Memory());

//	printf("[Fountain]MEM = %d\n",DPMI_Free_Memory());

#ifdef Play_Music
	Play_Module();
#endif
	setbuf(stdout,NULL);
	printf("Initializing, please wait...");
	SetGraphicsMode();

	Initialize_City(); //9.3
	Initialize_Fountain(); //8.3
	Run_Glato();
	while (Timer<4500);
	Timer = 1;
	Run_City();


	Timer = 1;
	Run_Fountain();

	Initialize_Greets(); //5.6
	Timer = 1;
	Run_Greets();

	Initialize_Crash();
	Timer = 1;

//	Run_Crash();
#ifdef Play_Music
	ShutDown();
#endif
	FDS_End();

//	printf("MEM = %d\n",DPMI_Free_Memory());
}