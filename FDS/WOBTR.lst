Microsoft (R) Macro Assembler Version 14.15.26730.0	    12/10/18 23:23:09
C:\Projects\REVIVAL\FDS\IMGGENR\WOBTR.ASM		     Page 1 - 1


				.686
				.MMX
				.XMM
 00000000			_DATA	SEGMENT DWORD PUBLIC 'DATA'
				align 4
 00000000 00000000		ScanLine								dd  0
 00000004 00000000		Delta_Left_U            dd  0
 00000008 00000000		Delta_Left_V            dd  0
 0000000C 00000000		Delta_Right_U           dd  0
 00000010 00000000		Delta_Right_V           dd  0
 00000014 00000000		Left_U									dd  0
 00000018 00000000		Left_V                  dd  0
 0000001C 00000000		Right_U                 dd  0
 00000020 00000000		Right_V                 dd  0
 00000024 00000000		du                      dd  0
 00000028 00000000		dv                      dd  0
 0000002C 00000000		lu                      dd  0
 00000030 00000000		lv                      dd  0
 00000034 00000000		PointsList              dd  0
 00000038 00000000		Texture		        			dd  0
 0000003C 00000000		x                       dd  0
 00000040 00000000		y								        dd  0
 00000044 00000000		Tebp       							dd  0
 00000048 00000000		t 						      		dd  0
 0000004C 00000000		counter									dd  0
				align 1
 = 00000100			ScreenWidth							equ 256
 = 00000100			ScreenHeight						equ 256
 = 00000020			PointsWidth							equ 32;ScreenWidth/8
				;EXTRN _WobPointsHeight  : DWORD ;
 = 00000020			_WobPointsHeight equ 32;ScreenHeight/8
 = 00000000			u												equ 0
 = 00000004			v												equ 4
 = 00000010			ElementSize             equ 16
 0050				_DATA	ENDS

 00000000			_TEXT	SEGMENT BYTE PUBLIC 'CODE'
					ASSUME	cs:_TEXT, ds:_DATA


					PUBLIC	_Grid_Texture_MapASM_
 00000000			_Grid_Texture_MapASM_:
				; On Entry : ecx - texture ; esi = pointer to points array which contains : {signed long u,v}; edi - Screen Pointer
 00000000  89 2D 00000044 R	mov [Tebp],ebp
 00000006  89 3D 00000000 R	mov [ScanLine],edi
 0000000C  89 0D 00000038 R	mov [Texture],ecx
 00000012  89 35 00000034 R	mov [PointsList],esi
 00000018  B8 00000020		mov eax,[_WobPointsHeight]
 0000001D  C7 05 0000003C R	mov [x],PointsWidth
	   00000020
 00000027  A3 00000040 R	mov [y],eax

 0000002C			@@DrawLoop:
 0000002C  8B 06		mov eax,[esi+u]
 0000002E  8B 5E 04		mov ebx,[esi+v]
 00000031  A3 00000014 R	mov [Left_U],eax
 00000036  89 1D 00000018 R	mov [Left_V],ebx
 0000003C  8B 8E 00000210	mov ecx,[esi+ElementSize+ElementSize*PointsWidth+u] ; yes, yes , i know it's looks a LITTLE too much , but then , it's concludes in one add in the end ;)
 00000042  8B 96 00000214	mov edx,[esi+ElementSize+ElementSize*PointsWidth+v]
 00000048  2B C8		sub ecx,eax
 0000004A  2B D3		sub edx,ebx
 0000004C  C1 F9 03		sar ecx,3
 0000004F  8B 46 10		mov eax,[esi+ElementSize+u]
 00000052  C1 FA 03		sar edx,3
 00000055  89 0D 00000004 R	mov [Delta_Left_U],ecx
 0000005B  89 15 00000008 R	mov [Delta_Left_V],edx
 00000061  8B 5E 14		mov ebx,[esi+ElementSize+v]
 00000064  A3 0000001C R	mov [Right_U],eax
 00000069  89 1D 00000020 R	mov [Right_V],ebx
 0000006F  8B 8E 00000220	mov ecx,[esi+ElementSize*2+ElementSize*PointsWidth+u]
 00000075  8B 96 00000224	mov edx,[esi+ElementSize*2+ElementSize*PointsWidth+v]
 0000007B  2B C8		sub ecx,eax
 0000007D  2B D3		sub edx,ebx
 0000007F  C1 F9 03		sar ecx,3
 00000082  83 C6 10		add esi,ElementSize
 00000085  C1 FA 03		sar edx,3
 00000088  89 35 00000034 R	mov [PointsList],esi
 0000008E  89 0D 0000000C R	mov [Delta_Right_U],ecx
 00000094  89 15 00000010 R	mov [Delta_Right_V],edx
 0000009A  8B 3D 00000000 R	mov edi,[ScanLine]
 000000A0  C7 05 0000004C R	mov [counter],8
	   00000008
 000000AA			@@Inner8:
 000000AA  A1 00000014 R	mov eax,[Left_U]
 000000AF  8B 1D 00000018 R	mov ebx,[Left_V]
 000000B5  8B 0D 0000001C R	mov ecx,[Right_U]
 000000BB  8B 15 00000020 R	mov edx,[Right_V]
 000000C1  2B C8		sub ecx,eax
 000000C3  2B D3		sub edx,ebx
 000000C5  C1 F9 03		sar ecx,3
 000000C8  BB 00000000		mov ebx,0
 000000CD  C1 FA 03		sar edx,3
 000000D0  89 0D 00000024 R	mov [du],ecx
 000000D6  89 15 00000028 R	mov [dv],edx
 000000DC  83 FA 00		cmp edx,0
 000000DF  7F 07		jg @@Positive
 000000E1  B9 00FF0000		mov ecx,00FF0000h
 000000E6  EB 05		jmp @@Cont
 000000E8			@@Positive:
 000000E8  B9 00000000		mov ecx,00000000h
 000000ED			@@Cont:
 000000ED  BA 00000000		mov edx,0
 000000F2  8A 1D 00000014 R	mov bl,byte ptr [Left_U]
 000000F8  C1 E3 18		shl ebx,24
 000000FB  8A 3D 00000019 R	mov bh,byte ptr [Left_V+1]
 00000101  B8 00000000		mov eax,0
 00000106  8A 1D 00000018 R	mov bl,byte ptr [Left_V]
 0000010C  A0 00000024 R	mov al,byte ptr [du]
 00000111  BD 00000000		mov ebp,0
 00000116  C1 E0 18		shl eax,24
 00000119  0B C8		or  ecx,eax
 0000011B  8A 15 00000015 R	mov dl,byte ptr [Left_U+1]
 00000121  8A F7		mov dh,bh
 00000123  B8 00000000		mov eax,0
 00000128  A0 00000025 R	mov al,byte ptr [du+1]
 0000012D  8A 0D 00000028 R	mov cl,byte ptr [dv] ; chk this
 00000133  8A 2D 00000029 R	mov ch,byte ptr [dv+1] ; chk this
 00000139  8B E8		mov ebp,eax
 0000013B  8B 35 00000038 R	mov esi,[Texture]


 00000141  8B 04 96		    mov   eax, [esi+edx*4]
 00000144  B6 00		    mov   dh,0
 00000146  03 D9		    add   ebx, ecx
 00000148  89 07		    mov   [edi],eax
 0000014A  13 D5		    adc   edx, ebp
 0000014C  8A F7		    mov   dh, bh

 0000014E  8B 04 96		    mov   eax, [esi+edx*4]
 00000151  B6 00		    mov   dh,0
 00000153  03 D9		    add   ebx, ecx
 00000155  89 47 04		    mov   [edi+4],eax
 00000158  13 D5		    adc   edx, ebp
 0000015A  8A F7		    mov   dh, bh

 0000015C  8B 04 96		    mov   eax, [esi+edx*4]
 0000015F  B6 00		    mov   dh,0
 00000161  03 D9		    add   ebx, ecx
 00000163  89 47 08		    mov   [edi+8],eax
 00000166  13 D5		    adc   edx, ebp
 00000168  8A F7		    mov   dh, bh

 0000016A  8B 04 96		    mov   eax, [esi+edx*4]
 0000016D  B6 00		    mov   dh,0
 0000016F  03 D9		    add   ebx, ecx
 00000171  89 47 0C		    mov   [edi+12], eax
 00000174  13 D5		    adc   edx, ebp
 00000176  8A F7		    mov   dh, bh

 00000178  8B 04 96		    mov   eax, [esi+edx*4]
 0000017B  B6 00		    mov   dh,0
 0000017D  03 D9		    add   ebx, ecx
 0000017F  89 47 10		    mov   [edi+16], eax
 00000182  13 D5		    adc   edx, ebp
 00000184  8A F7		    mov   dh, bh

 00000186  8B 04 96		    mov   eax, [esi+edx*4]
 00000189  B6 00		    mov   dh,0
 0000018B  03 D9		    add   ebx, ecx
 0000018D  89 47 14		    mov   [edi+20], eax
 00000190  13 D5		    adc   edx, ebp
 00000192  8A F7		    mov   dh, bh


 00000194  8B 04 96		    mov   eax, [esi+edx*4]
 00000197  B6 00		    mov   dh,0
 00000199  03 D9		    add   ebx, ecx
 0000019B  89 47 18		    mov   [edi+24], eax
 0000019E  13 D5		    adc   edx, ebp
 000001A0  8A F7		    mov   dh, bh

 000001A2  8B 04 96		    mov   eax, [esi+edx*4]
 000001A5  89 47 1C		    mov   [edi+28], eax


 000001A8  81 C7 00000400	add edi,1024
 000001AE  A1 00000014 R	mov eax,[Left_U]
 000001B3  8B 1D 00000018 R	mov ebx,[Left_V]
 000001B9  8B 0D 00000004 R	mov ecx,[Delta_Left_U]
 000001BF  8B 15 00000008 R	mov edx,[Delta_Left_V]
 000001C5  03 C1		add eax,ecx
 000001C7  03 DA		add ebx,edx
 000001C9  A3 00000014 R	mov [Left_U],eax
 000001CE  89 1D 00000018 R	mov [Left_V],ebx
 000001D4  A1 0000001C R	mov eax,[Right_U]
 000001D9  8B 1D 00000020 R	mov ebx,[Right_V]
 000001DF  8B 0D 0000000C R	mov ecx,[Delta_Right_U]
 000001E5  8B 15 00000010 R	mov edx,[Delta_Right_V]
 000001EB  03 C1		add eax,ecx
 000001ED  03 DA		add ebx,edx
 000001EF  A3 0000001C R	mov [Right_U],eax
 000001F4  89 1D 00000020 R	mov [Right_V],ebx
 000001FA  8B 35 0000004C R	mov esi,[counter]
 00000200  4E			dec esi
 00000201  89 35 0000004C R	mov [counter],esi
 00000207  0F 85 FFFFFE9D	jnz @@Inner8
 0000020D  A1 00000000 R	mov eax,[ScanLine]
 00000212  83 C0 20		add eax,32
 00000215  A3 00000000 R	mov [ScanLine],eax
 0000021A  8B 35 00000034 R	mov esi,[PointsList]
 00000220  8B 1D 0000003C R	mov ebx,[x]
 00000226  4B			dec ebx
 00000227  89 1D 0000003C R	mov [x],ebx
 0000022D  0F 85 FFFFFDF9	jnz @@DrawLoop
 00000233  8B 0D 00000000 R	mov ecx,[ScanLine]
 00000239  8B 1D 00000040 R	mov ebx,[y]
 0000023F  81 C1 00001C00	add ecx,(8-1)*ScreenWidth*4
 00000245  83 C6 10		add esi,ElementSize
 00000248  C7 05 0000003C R	mov [x],PointsWidth
	   00000020
 00000252  89 35 00000034 R	mov [PointsList],esi
 00000258  89 0D 00000000 R	mov [ScanLine],ecx
 0000025E  4B			dec ebx
 0000025F  89 1D 00000040 R	mov [y],ebx
 00000265  0F 85 FFFFFDC1	jnz @@DrawLoop
 0000026B  8B 2D 00000044 R	mov ebp,[Tebp]
 00000271  C3			ret
 0272				_TEXT	ENDS

				END
Microsoft (R) Macro Assembler Version 14.15.26730.0	    12/10/18 23:23:09
C:\Projects\REVIVAL\FDS\IMGGENR\WOBTR.ASM		     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

_DATA  . . . . . . . . . . . . .	32 Bit	 0050	  DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0272	  Byte	  Public  'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

@@Cont . . . . . . . . . . . . .	L Near	 00ED	  _TEXT	
@@DrawLoop . . . . . . . . . . .	L Near	 002C	  _TEXT	
@@Inner8 . . . . . . . . . . . .	L Near	 00AA	  _TEXT	
@@Positive . . . . . . . . . . .	L Near	 00E8	  _TEXT	
Delta_Left_U . . . . . . . . . .	DWord	 0004	  _DATA	
Delta_Left_V . . . . . . . . . .	DWord	 0008	  _DATA	
Delta_Right_U  . . . . . . . . .	DWord	 000C	  _DATA	
Delta_Right_V  . . . . . . . . .	DWord	 0010	  _DATA	
ElementSize  . . . . . . . . . .	Number	 0010h	 
Left_U . . . . . . . . . . . . .	DWord	 0014	  _DATA	
Left_V . . . . . . . . . . . . .	DWord	 0018	  _DATA	
PointsList . . . . . . . . . . .	DWord	 0034	  _DATA	
PointsWidth  . . . . . . . . . .	Number	 0020h	 
Right_U  . . . . . . . . . . . .	DWord	 001C	  _DATA	
Right_V  . . . . . . . . . . . .	DWord	 0020	  _DATA	
ScanLine . . . . . . . . . . . .	DWord	 0000	  _DATA	
ScreenHeight . . . . . . . . . .	Number	 0100h	 
ScreenWidth  . . . . . . . . . .	Number	 0100h	 
Tebp . . . . . . . . . . . . . .	DWord	 0044	  _DATA	
Texture  . . . . . . . . . . . .	DWord	 0038	  _DATA	
_Grid_Texture_MapASM_  . . . . .	L Near	 0000	  _TEXT	Public
_WobPointsHeight . . . . . . . .	Number	 0020h	 
counter  . . . . . . . . . . . .	DWord	 004C	  _DATA	
du . . . . . . . . . . . . . . .	DWord	 0024	  _DATA	
dv . . . . . . . . . . . . . . .	DWord	 0028	  _DATA	
lu . . . . . . . . . . . . . . .	DWord	 002C	  _DATA	
lv . . . . . . . . . . . . . . .	DWord	 0030	  _DATA	
t  . . . . . . . . . . . . . . .	DWord	 0048	  _DATA	
u  . . . . . . . . . . . . . . .	Number	 0000h	 
v  . . . . . . . . . . . . . . .	Number	 0004h	 
x  . . . . . . . . . . . . . . .	DWord	 003C	  _DATA	
y  . . . . . . . . . . . . . . .	DWord	 0040	  _DATA	

	   1 Warnings
	   0 Errors
