Microsoft (R) Macro Assembler Version 10.00.30319.01	    07/08/11 23:14:43
C:\Projects\REVIVAL\FDS\FILLERS\GOURMMXT.ASM		     Page 1 - 1


				.686
				.MMX
				.XMM
 00000000			_DATA   SEGMENT PARA PUBLIC 'DATA'
				align 16
 00000000			MMXTemp			dq  0
	   0000000000000000
 00000008 00000000		Left_Section            dd 0
 0000000C 00000000		Right_Section           dd 0
 00000010 00000000		Left_Section_Height     dd 0
 00000014 00000000		Right_Section_Height    dd 0
 00000018 00000000		Left_R              dd 0.0 ; float
 0000001C 00000000		Delta_left_R            dd 0.0 ; float
 00000020 00000000		Left_G              dd 0.0 ; float
 00000024 00000000		Delta_left_G            dd 0.0 ; float
 00000028 00000000		Left_B                  dd 0.0 ; float
 0000002C 00000000		Delta_left_B            dd 0.0 ; float
 00000030 00000000		Right_R                 dd 0.0 ; float
 00000034 00000000		Delta_right_R           dd 0.0 ; float
 00000038 00000000		Right_G                 dd 0.0 ; float
 0000003C 00000000		Delta_right_G           dd 0.0 ; float
 00000040 00000000		Right_B                 dd 0.0 ; float
 00000044 00000000		Delta_right_B           dd 0.0 ; float
 00000048 00000000		RevHeight               dd 0.0 ; float
 0000004C 00000000		RevWidth                dd 0.0 ; float
 00000050 00000000		R                       dd 0
 00000054 00000000		G                       dd 0
 00000058 00000000		B                       dd 0
 0000005C 00000000		dr              dd 0
 00000060  00000004 [		tb      db 4 dup(0)
	    00
	   ]
 00000064 00000000		dg                      dd 0
 00000068 00000000		dbb                     dd 0
 0000006C 00000000		XWidth          dd 0
 00000070 00000000		Height          dd 0
 00000074 00000000		Longest         dd 0
 00000078  00000003 [		Left_Array              dd 3 dup(0)
	    00000000
	   ]
 00000084  00000003 [		RIght_Array             dd 3 dup(0)
	    00000000
	   ]
 00000090 00000000		Left_X          dd 0
 00000094 00000000		Delta_Left_X        dd 0
 00000098 00000000		Right_X         dd 0
 0000009C 00000000		Delta_Right_X       dd 0
 000000A0 00000000		Where                   dd 0
 000000A4 00000000		Top                     dd 0
 000000A8 00000000		Middle                  dd 0
 000000AC 00000000		Bottom                  dd 0
 000000B0 00000000		ScanLine        dd 0
 000000B4 00000000		TEBP            dd 0
 = 00000000			Vertex_X  equ 0
 = 00000004			Vertex_Y  equ 4
 = 00000010			Vertex_R  equ 16
 = 0000000C			Vertex_G  equ 12
 = 00000008			Vertex_B  equ 8
 000000B8 3F800000		One       dd  1.0
 000000BC 3F800000		Sixteen   dd  1.0
 000000C0 43800000		Sixtyfive dd  256.0

				EXTRN  _VESA_BPSL           : DWORD

 000000C4 000004EF		_RGBTGouraudMMX_Size	dd	ASM_FILE_END - _RGBTGouraudMMX_
				align 1
 00C8				_DATA   ENDS

 00000000			_TEXT   SEGMENT BYTE PUBLIC 'CODE'
					ASSUME  cs:_TEXT, ds:_DATA

					PUBLIC  _RGBTGouraudMMX_Size

					PUBLIC  _RGBTGouraudMMX_
 00000000			_RGBTGouraudMMX_:
 00000000  89 2D 000000B4 R	mov [TEBP],ebp

				;vtx in ebx , where in ecx

 00000006  89 0D 000000A0 R	mov [Where],ecx

 0000000C  8B CB		mov ecx,ebx
 0000000E  8B F3		mov esi,ebx
 00000010  8B FB		mov edi,ebx
 00000012  83 C6 14		add esi,20
 00000015  83 C7 28		add edi,40

				;ecx - vertex 1
				;esi - vertex 2
				;edi - vertex 3

 00000018  8B 41 04		mov eax,[ecx+Vertex_Y]
 0000001B  3B 46 04		cmp eax,[esi+Vertex_Y]
 0000001E  7E 02		jle @@sort1
 00000020  87 CE		xchg ecx,esi
 00000022			@@sort1:
 00000022  8B 41 04		mov eax,[ecx+Vertex_Y]
 00000025  3B 47 04		cmp eax,[edi+Vertex_Y]
 00000028  7E 02		jle @@sort2
 0000002A  87 CF		xchg ecx,edi
 0000002C			@@sort2:
 0000002C  8B 46 04		mov eax,[esi+Vertex_Y]
 0000002F  3B 47 04		cmp eax,[edi+Vertex_Y]
 00000032  7E 02		jle @@sort3
 00000034  87 F7		xchg esi,edi
 00000036			@@sort3:

 00000036  8B 5F 04		mov ebx,[edi+Vertex_Y]
 00000039  2B 59 04		sub ebx,[ecx+Vertex_Y]
 0000003C  0F 84 00000374	jz TextureEnd

				;    int temp = ((v2->y - v1->y) << 16) / height;
				;    int longest = temp * (v3->x - v1->x) + ((v1->x - v2->x) << 16);
				;eax-longest

 00000042  8B 46 04		mov eax,[esi+Vertex_Y]
 00000045  8B 29		mov ebp,[ecx+Vertex_X]
 00000047  2B 41 04		sub eax,[ecx+Vertex_Y]
 0000004A  2B 2E		sub ebp,[esi+Vertex_X]
 0000004C  C1 E0 10		sal eax,16
 0000004F  C1 E5 10		sal ebp,16
 00000052  8B D0		mov edx,eax
 00000054  C1 FA 1F		sar edx,31
 00000057  F7 FB		idiv ebx
 00000059  8B 1F		mov ebx,[edi+Vertex_X]
 0000005B  2B 19		sub ebx,[ecx+Vertex_X]
 0000005D  F7 EB		imul ebx
 0000005F  03 C5		add eax,ebp
 00000061  A3 00000074 R	mov [Longest],eax
 00000066  0F 84 0000034A	jz TextureEnd
 0000006C  7D 7D		jge LongestOverZero


 0000006E  89 0D 000000A4 R	mov [Top],ecx
 00000074  8B E9		mov ebp,ecx
 00000076  89 35 000000A8 R	mov [Middle],esi
 0000007C  89 3D 000000AC R	mov [Bottom],edi
 00000082  89 3D 00000084 R	mov [Right_Array],edi
 00000088  89 35 00000088 R	mov [Right_Array+4],esi
 0000008E  89 0D 0000008C R	mov [Right_Array+8],ecx
 00000094  C7 05 0000000C R	mov [Right_Section],2
	   00000002

 0000009E  89 3D 00000078 R	mov [Left_Array],edi
 000000A4  89 0D 0000007C R	mov [Left_Array+4],ecx
 000000AA  C7 05 00000008 R	mov [Left_Section],1
	   00000001

 000000B4  E8 00000304		call CalcLeftSection
 000000B9  83 FB 00		cmp ebx,0
 000000BC  0F 8E 000002F4	jle TextureEnd

 000000C2  E8 0000038F		call CalcRightSection
 000000C7  83 FB 00		cmp ebx,0
 000000CA  0F 8F 00000092	jg FLSNZ  ; First Right Section Is Not Zero
 000000D0  A1 0000000C R	mov eax,[Right_Section]
 000000D5  48			dec eax
 000000D6  A3 0000000C R	mov [Right_Section],eax
 000000DB  E8 00000376		call CalcRightSection
 000000E0  83 FB 00		cmp ebx,0
 000000E3  0F 8E 000002CD	jle TextureEnd
 000000E9  EB 77		jmp FLSNZ

 000000EB			LongestOverZero:
 000000EB  89 0D 000000A4 R	mov [Top],ecx
 000000F1  8B E9		mov ebp,ecx
 000000F3  89 35 000000A8 R	mov [Middle],esi
 000000F9  89 3D 000000AC R	mov [Bottom],edi
 000000FF  89 3D 00000078 R	mov [Left_Array],edi
 00000105  89 35 0000007C R	mov [Left_Array+4],esi
 0000010B  89 0D 00000080 R	mov [Left_Array+8],ecx
 00000111  C7 05 00000008 R	mov [Left_Section],2
	   00000002

 0000011B  89 3D 00000084 R	mov [Right_Array],edi
 00000121  89 0D 00000088 R	mov [Right_Array+4],ecx
 00000127  C7 05 0000000C R	mov [Right_Section],1
	   00000001

 00000131  E8 00000320		call CalcRightSection
 00000136  83 FB 00		cmp ebx,0
 00000139  0F 8E 00000277	jle TextureEnd

 0000013F  E8 00000279		call CalcLeftSection
 00000144  83 FB 00		cmp ebx,0
 00000147  7F 19		jg FLSNZ  ; First Left Section Is Not Zero
 00000149  A1 00000008 R	mov eax,[Left_Section]
 0000014E  48			dec eax
 0000014F  A3 00000008 R	mov [Left_Section],eax
 00000154  E8 00000264		call CalcLeftSection
 00000159  83 FB 00		cmp ebx,0
 0000015C  0F 8E 00000254	jle TextureEnd
 00000162			FLSNZ:

 00000162  8B 7D 04		mov edi,[ebp+vertex_y]
 00000165  A1 00000000 E	mov eax,[_VESA_BPSL]
 0000016A  F7 E7		mul edi
 0000016C  03 05 000000A0 R	add eax,[Where]
 00000172  A3 000000B0 R	mov [ScanLine],eax

				;mov edi,[ebp+vertex_y]
				;mov edx,edi
				;sal edi,8
				;sal edx,10
				;add edi,[Where]
				;add edi,edx
				;mov [ScanLine],edi

 00000177			OuterLoop:
				;Inner Loop Start Here
 00000177  A1 00000090 R	mov eax,[Left_X]
 0000017C  8B 35 00000098 R	mov esi,[Right_X]
 00000182  C1 F8 10		sar eax,16
 00000185  8B 3D 000000B0 R	mov edi,[ScanLine]
 0000018B  C1 FE 10		sar esi,16
 0000018E  2B F0		sub esi,eax
 00000190  0F 8E 00000114	jle UpdateValues
 00000196  D9 05 000000BC R	FLD dword ptr [Sixteen]
 0000019C  89 35 0000006C R	mov [XWidth],esi
 000001A2  DB 05 0000006C R	FILD dword ptr [XWidth]
 000001A8  DE F9		FDIV                ;ST(6) - 1.0/Width
 000001AA  D9 05 000000C0 R	FLD dword ptr [SixtyFive]
 000001B0  DE C9		FMUL
 000001B2  D9 05 00000018 R	FLD dword ptr [Left_R]   ;ST(5)
 000001B8  D9 05 00000020 R	FLD dword ptr [Left_G]   ;ST(4)
 000001BE  D9 05 00000028 R	FLD dword ptr [Left_B]   ;ST(3)
 000001C4  D9 05 00000030 R	FLD dword ptr [Right_R]  ;ST(2)
 000001CA  D9 05 00000038 R	FLD dword ptr [Right_G]  ;ST(1)
 000001D0  D9 05 00000040 R	FLD dword ptr [Right_B]  ;ST(0)
 000001D6  D8 E3		FSUB ST(0),ST(3) ;ST(1) = Delta B
 000001D8  D9 C9		FXCH ST(1)
 000001DA  D8 E4		FSUB ST(0),ST(4) ;ST(2) = Delta G
 000001DC  D9 CA		FXCH ST(2)
 000001DE  D8 E5		FSUB ST(0),ST(5) ;ST(0) = Delta R
 000001E0  D8 CE		FMUL ST(0),ST(6)
 000001E2  D9 CA		FXCH ST(2)
 000001E4  D8 CE		FMUL ST(0),ST(6)
 000001E6  D9 C9		FXCH ST(1)
 000001E8  D8 CE		FMUL ST(0),ST(6)
 000001EA  DD C6		FFREE ST(6)
 000001EC  DB 1D 00000068 R	FISTP dword ptr [dbb]
 000001F2  DB 1D 00000064 R	FISTP dword ptr [dg]
 000001F8  DB 1D 0000005C R	FISTP dword ptr [dr]
 000001FE  8D 3C 87		lea edi,[edi+eax*4]
				;FLD One
				;FDIV ST(0),ST(6)
				;mov cl,[Edi]
 00000201  D9 05 000000C0 R	FLD dword ptr [SixtyFive]
 00000207  D9 C0		FLD ST(0)
 00000209  D8 CC		FMUL ST(0),ST(4)
 0000020B  DB 1D 00000050 R	FISTP dword ptr [R]
 00000211  D9 C0		FLD ST(0)
 00000213  D8 CB		FMUL ST(0),ST(3)
 00000215  DB 1D 00000054 R	FISTP dword ptr [G]
 0000021B  D8 C9		FMUL ST(0),ST(1)
 0000021D  DB 1D 00000058 R	FISTP dword ptr [B]

				;Left R   ST(5)
				;Left G   ST(4)
				;Left B   ST(3)
				;Delta R  ST(2)
				;Delta G  ST(1)
				;Delta B  ST(0)
				comment &
				FXCH ST(3)  ;ST(0) = B    ST(3) = Delta B
				FADD ST(0),ST(3)
				FXCH ST(1)  ;ST(0) = Delta G    ST(1) = B
				FXCH ST(4)  ;ST(0) = G    ST(4) = Delta G
				FADD ST(0),ST(4)
				FXCH ST(2)  ;ST(0) = Delta R    ST(2) = G
				FXCH ST(5)  ;ST(0) = R    ST(5) = Delta R
				FADD ST(0),ST(5)

				;Delta R  ST(5)
				;Delta G  ST(4)
				;Delta B  ST(3)
				;Left R   ST(2)
				;Left G   ST(1)
				;Left B   ST(0)
				&

 00000223			InnerOuterLoop:

				;Delta Z  ST(5)
				;Delta U  ST(4)
				;Delta V  ST(3)
				;Left U   ST(2)
				;Left V   ST(1)
				;Left Z   ST(0)

				comment &
				Registers| 31 - 24 | 23 - 16 | 15 - 8  |  7 - 0  |
				--------------------------------------------------
				EAX      | frac R  |000000000| int G   | frac G  |
				--------------------------------------------------
				EBX      | frac DR |000000000| int DG  | frac DG |
				--------------------------------------------------
				ECX      |000000000| int B   | frac B  | int R   |
				--------------------------------------------------
				EDX      |000000000|000000000|000000000|000000000|
				--------------------------------------------------
				EDI      | C0000uuuuuuuuuuuuuuuuuuuuuuuuuuuunter |
				--------------------------------------------------
				ESI      |000000000| int DB  | frac DB | int DR  |
				--------------------------------------------------
				EBP      | Screeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeen |
				--------------------------------------------------
				&
				; The preperations are made for 8.8 fixed point!!! (B is 8.7 - lines longer than 128 may be a little scrambled)

				;mov eax,[dr]
				;mov ebx,[dg]
				;mov ecx,[dbb]
				;sub [r],eax
				;sub [g],ebx
				;sub [b],ecx

 00000223  8D 2C B7		lea ebp,[edi+esi*4]
 00000226  8B FE		mov edi,esi
 00000228  C1 E7 02		shl edi,2
 0000022B  83 F7 FF		xor edi,-1
 0000022E  47			inc edi


 0000022F  0F 77		emms

 00000231  A1 00000050 R	mov eax,[r]
 00000236  66| A3		mov word ptr [MMXTemp],ax
	   00000000 R
 0000023C  A1 00000054 R	mov eax,[g]
 00000241  66| A3		mov word ptr [MMXTemp+2],ax
	   00000002 R
 00000247  A1 00000058 R	mov eax,[b]
 0000024C  66| A3		mov word ptr [MMXTemp+4],ax
	   00000004 R
 00000252  0F 6F 05		movq mm0,[MMXTemp]
	   00000000 R

 00000259  A1 0000005C R	mov eax,[dr]
 0000025E  66| A3		mov word ptr [MMXTemp],ax
	   00000000 R
 00000264  A1 00000064 R	mov eax,[dg]
 00000269  66| A3		mov word ptr [MMXTemp+2],ax
	   00000002 R
 0000026F  A1 00000068 R	mov eax,[dbb]
 00000274  66| A3		mov word ptr [MMXTemp+4],ax
	   00000004 R
 0000027A  0F 6F 0D		movq mm1,[MMXTemp]
	   00000000 R

 00000281			@@InnerLoop:    ;Diffuse MMX R/G/B Gouraud Inner Loop
 00000281  0F 7F C3		movq mm3,mm0
 00000284  0F 60 54 3D 00	punpcklbw mm2,[edi+ebp]
 00000289  0F 71 D3 08		psrlw mm3,8
 0000028D  0F 71 D2 08		psrlw mm2,8
 00000291  0F D5 D3		pmullw mm2,mm3
 00000294  0F 71 D2 07		psrlw mm2,7
 00000298  0F 67 D2		packuswb mm2,mm2
 0000029B  0F 7E 54 3D 00	movd dword ptr [edi+ebp],mm2
 000002A0  0F FD C1		paddw mm0,mm1
 000002A3  83 C7 04		add edi,4
 000002A6  75 D9		jnz @@InnerLoop

				;FFREE ST(0)
				;FFREE ST(1)
				;FFREE ST(2)
 000002A8  0F 77		emms
				;Inner Loop End Here

 000002AA			UpdateValues:
 000002AA  A1 000000B0 R	mov eax,[ScanLine]
 000002AF  8B 1D 00000010 R	mov ebx,[Left_Section_Height]
 000002B5  03 05 00000000 E	add eax,[_VESA_BPSL]
 000002BB  4B			dec ebx
 000002BC  A3 000000B0 R	mov [ScanLine],eax
 000002C1  89 1D 00000010 R	mov [Left_Section_Height],ebx
 000002C7  7F 23		jg @@Update_Left_UVXZ
 000002C9  8B 1D 00000008 R	mov ebx,[Left_Section]
 000002CF  4B			dec ebx
 000002D0  0F 8E 000000E0	jle TextureEnd
 000002D6  89 1D 00000008 R	mov [Left_Section],ebx
 000002DC  E8 000000DC		call CalcLeftSection
 000002E1  83 FB 00		cmp ebx,0
 000002E4  0F 8E 000000CC	jle TextureEnd
 000002EA  EB 4C		jmp RightSectionCheck
 000002EC			@@Update_Left_UVXZ:
 000002EC  D9 05 00000018 R	FLD dword ptr [Left_R]
 000002F2  D9 05 00000020 R	FLD dword ptr [Left_G]
 000002F8  D9 C9		FXCH ST(1)
 000002FA  D8 05 0000001C R	FADD dword ptr [Delta_Left_R]
 00000300  D9 C9		FXCH ST(1)
 00000302  D8 05 00000024 R	FADD [Delta_Left_G]
 00000308  D9 C9		FXCH ST(1)
 0000030A  D9 1D 00000018 R	FSTP dword ptr [Left_R]
 00000310  D9 1D 00000020 R	FSTP dword ptr [Left_G]

 00000316  D9 05 00000028 R	FLD dword ptr [Left_B]
 0000031C  A1 00000090 R	mov eax,[Left_X]
 00000321  D8 05 0000002C R	FADD dword ptr [Delta_Left_B]
 00000327  03 05 00000094 R	add eax,[Delta_Left_X]
 0000032D  D9 1D 00000028 R	FSTP dword ptr [Left_B]
 00000333  A3 00000090 R	mov [Left_X],eax

 00000338			RightSectionCheck:
 00000338  8B 1D 00000014 R	mov ebx,[Right_Section_Height]
 0000033E  4B			dec ebx
 0000033F  89 1D 00000014 R	mov [Right_Section_Height],ebx
 00000345  7F 1E		jg @@Update_Right_UVXZ
 00000347  8B 1D 0000000C R	mov ebx,[Right_Section]
 0000034D  4B			dec ebx
 0000034E  7E 66		jle TextureEnd
 00000350  89 1D 0000000C R	mov [Right_Section],ebx
 00000356  E8 000000FB		call CalcRightSection
 0000035B  83 FB 00		cmp ebx,0
 0000035E  7E 56		jle TextureEnd
 00000360  E9 FFFFFE12		jmp OuterLoop

 00000365			@@Update_Right_UVXZ:
 00000365  D9 05 00000030 R	FLD dword ptr [Right_R]
 0000036B  D9 05 00000038 R	FLD dword ptr [Right_G]
 00000371  D9 C9		FXCH ST(1)
 00000373  D8 05 00000034 R	FADD dword ptr [Delta_Right_R]
 00000379  D9 C9		FXCH ST(1)
 0000037B  D8 05 0000003C R	FADD [Delta_Right_G]
 00000381  D9 C9		FXCH ST(1)
 00000383  D9 1D 00000030 R	FSTP dword ptr [Right_R]
 00000389  D9 1D 00000038 R	FSTP dword ptr [Right_G]

 0000038F  D9 05 00000040 R	FLD dword ptr [Right_B]
 00000395  A1 00000098 R	mov eax,[Right_X]
 0000039A  D8 05 00000044 R	FADD dword ptr [Delta_Right_B]
 000003A0  03 05 0000009C R	add eax,[Delta_Right_X]
 000003A6  D9 1D 00000040 R	FSTP dword ptr [Right_B]
 000003AC  A3 00000098 R	mov [Right_X],eax

 000003B1  E9 FFFFFDC1		jmp OuterLoop

 000003B6			TextureEnd:
 000003B6  8B 2D 000000B4 R	mov ebp,[Tebp]
 000003BC  C3			ret

 000003BD			CalcLeftSection proc near

 000003BD  A1 00000008 R	mov eax,[Left_Section]
 000003C2  8B 0C 85		mov ecx,[Left_Array+eax*4]
	   00000078 R
 000003C9  83 E8 01		sub eax,1
 000003CC  8B 34 85		mov esi,[Left_Array+eax*4]
	   00000078 R
 000003D3  8B 5E 04		mov ebx,[esi+Vertex_Y]
 000003D6  2B 59 04		sub ebx,[ecx+Vertex_Y]
 000003D9  74 74		jz @@CLSend
 000003DB  89 1D 00000070 R	mov [Height],ebx
 000003E1  8B 11		mov edx,[ecx+Vertex_X]
 000003E3  DB 05 00000070 R	FILD dword ptr [Height]
 000003E9  C1 E2 10		sal edx,16
 000003EC  8B 06		mov eax,[esi+Vertex_X]
 000003EE  2B 01		sub eax,[ecx+Vertex_X]
 000003F0  D9 05 000000B8 R	FLD dword ptr [One]
 000003F6  C1 E0 10		sal eax,16
 000003F9  89 15 00000090 R	mov [left_x],edx
 000003FF  8B D0		mov edx,eax
 00000401  DE F1		FDIVR
 00000403  C1 FA 1F		sar edx,31
 00000406  F7 FB		idiv ebx
 00000408  D9 46 10		FLD dword ptr [esi+Vertex_R]
 0000040B  A3 00000094 R	mov [Delta_Left_X],eax
 00000410  D9 41 10		FLD dword ptr [ecx+Vertex_R]
 00000413  D9 15 00000018 R	FST [Left_R]
 00000419  DE E9		FSUB
 0000041B  D8 C9		FMUL ST,ST(1)
 0000041D  D9 1D 0000001C R	FSTP dword ptr [Delta_Left_R]

 00000423  D9 46 0C		FLD dword ptr [esi+Vertex_G]
 00000426  D9 41 0C		FLD dword ptr [ecx+Vertex_G]
 00000429  D9 15 00000020 R	FST [Left_G]
 0000042F  DE E9		FSUB
 00000431  D8 C9		FMUL ST,ST(1)
 00000433  D9 1D 00000024 R	FSTP dword ptr [Delta_Left_G]

 00000439  D9 46 08		FLD dword ptr [esi+Vertex_B]
 0000043C  D9 41 08		FLD dword ptr [ecx+Vertex_B]
 0000043F  D9 15 00000028 R	FST [Left_B]
 00000445  DE E9		FSUB
 00000447  DE C9		FMUL
 00000449  D9 1D 0000002C R	FSTP dword ptr [Delta_Left_B]
 0000044F			@@CLSend:
 0000044F  89 1D 00000010 R	mov [Left_Section_Height],ebx
 00000455  C3				ret
 00000456			CalcLeftSection endp



 00000456			CalcRightSection proc near

 00000456  A1 0000000C R	mov eax,[Right_Section]
 0000045B  8B 0C 85		mov ecx,[Right_Array+eax*4]
	   00000084 R
 00000462  83 E8 01		sub eax,1
 00000465  8B 34 85		mov esi,[Right_Array+eax*4]
	   00000084 R
 0000046C  8B 5E 04		mov ebx,[esi+Vertex_Y]
 0000046F  2B 59 04		sub ebx,[ecx+Vertex_Y]
 00000472  74 74		jz @@CRSend
 00000474  89 1D 00000070 R	mov [Height],ebx
 0000047A  8B 11		mov edx,[ecx+Vertex_X]
 0000047C  DB 05 00000070 R	FILD dword ptr [Height]
 00000482  C1 E2 10		sal edx,16
 00000485  8B 06		mov eax,[esi+Vertex_X]
 00000487  2B 01		sub eax,[ecx+Vertex_X]
 00000489  D9 05 000000B8 R	FLD dword ptr [One]
 0000048F  C1 E0 10		sal eax,16
 00000492  89 15 00000098 R	mov [Right_X],edx
 00000498  8B D0		mov edx,eax
 0000049A  DE F1		FDIVR
 0000049C  C1 FA 1F		sar edx,31
 0000049F  F7 FB		idiv ebx
 000004A1  D9 46 10		FLD dword ptr [esi+Vertex_R]
 000004A4  A3 0000009C R	mov [Delta_Right_X],eax
 000004A9  D9 41 10		FLD dword ptr [ecx+Vertex_R]
 000004AC  D9 15 00000030 R	FST [Right_R]
 000004B2  DE E9		FSUB
 000004B4  D8 C9		FMUL ST,ST(1)
 000004B6  D9 1D 00000034 R	FSTP dword ptr [Delta_Right_R]

 000004BC  D9 46 0C		FLD dword ptr [esi+Vertex_G]
 000004BF  D9 41 0C		FLD dword ptr [ecx+Vertex_G]
 000004C2  D9 15 00000038 R	FST [Right_G]
 000004C8  DE E9		FSUB
 000004CA  D8 C9		FMUL ST,ST(1)
 000004CC  D9 1D 0000003C R	FSTP dword ptr [Delta_Right_G]

 000004D2  D9 46 08		FLD dword ptr [esi+Vertex_B]
 000004D5  D9 41 08		FLD dword ptr [ecx+Vertex_B]
 000004D8  D9 15 00000040 R	FST [Right_B]
 000004DE  DE E9		FSUB
 000004E0  DE C9		FMUL
 000004E2  D9 1D 00000044 R	FSTP dword ptr [Delta_Right_B]
 000004E8			@@CRSend:
 000004E8  89 1D 00000014 R	mov [Right_Section_Height],ebx
 000004EE  C3				ret
 000004EF			CalcRightSection endp

 000004EF = 000004EF		ASM_FILE_END	equ	$

 04EF				_TEXT   ENDS

				END
Microsoft (R) Macro Assembler Version 10.00.30319.01	    07/08/11 23:14:43
C:\Projects\REVIVAL\FDS\FILLERS\GOURMMXT.ASM		     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

_DATA  . . . . . . . . . . . . .	32 Bit	 00C8	  Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 04EF	  Byte	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CalcLeftSection  . . . . . . . .	P Near	 03BD	  _TEXT	Length= 0099 Public
  @@CLSend . . . . . . . . . . .	L Near	 044F	  _TEXT	
CalcRightSection . . . . . . . .	P Near	 0456	  _TEXT	Length= 0099 Public
  @@CRSend . . . . . . . . . . .	L Near	 04E8	  _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@@InnerLoop  . . . . . . . . . .	L Near	 0281	  _TEXT	
@@Update_Left_UVXZ . . . . . . .	L Near	 02EC	  _TEXT	
@@Update_Right_UVXZ  . . . . . .	L Near	 0365	  _TEXT	
@@sort1  . . . . . . . . . . . .	L Near	 0022	  _TEXT	
@@sort2  . . . . . . . . . . . .	L Near	 002C	  _TEXT	
@@sort3  . . . . . . . . . . . .	L Near	 0036	  _TEXT	
ASM_FILE_END . . . . . . . . . .	Number	 04EFh	 
Bottom . . . . . . . . . . . . .	DWord	 00AC	  _DATA	
B  . . . . . . . . . . . . . . .	DWord	 0058	  _DATA	
Delta_Left_X . . . . . . . . . .	DWord	 0094	  _DATA	
Delta_Right_X  . . . . . . . . .	DWord	 009C	  _DATA	
Delta_left_B . . . . . . . . . .	DWord	 002C	  _DATA	
Delta_left_G . . . . . . . . . .	DWord	 0024	  _DATA	
Delta_left_R . . . . . . . . . .	DWord	 001C	  _DATA	
Delta_right_B  . . . . . . . . .	DWord	 0044	  _DATA	
Delta_right_G  . . . . . . . . .	DWord	 003C	  _DATA	
Delta_right_R  . . . . . . . . .	DWord	 0034	  _DATA	
FLSNZ  . . . . . . . . . . . . .	L Near	 0162	  _TEXT	
G  . . . . . . . . . . . . . . .	DWord	 0054	  _DATA	
Height . . . . . . . . . . . . .	DWord	 0070	  _DATA	
InnerOuterLoop . . . . . . . . .	L Near	 0223	  _TEXT	
Left_Array . . . . . . . . . . .	DWord	 0078	  _DATA	
Left_B . . . . . . . . . . . . .	DWord	 0028	  _DATA	
Left_G . . . . . . . . . . . . .	DWord	 0020	  _DATA	
Left_R . . . . . . . . . . . . .	DWord	 0018	  _DATA	
Left_Section_Height  . . . . . .	DWord	 0010	  _DATA	
Left_Section . . . . . . . . . .	DWord	 0008	  _DATA	
Left_X . . . . . . . . . . . . .	DWord	 0090	  _DATA	
LongestOverZero  . . . . . . . .	L Near	 00EB	  _TEXT	
Longest  . . . . . . . . . . . .	DWord	 0074	  _DATA	
MMXTemp  . . . . . . . . . . . .	QWord	 0000	  _DATA	
Middle . . . . . . . . . . . . .	DWord	 00A8	  _DATA	
One  . . . . . . . . . . . . . .	DWord	 00B8	  _DATA	
OuterLoop  . . . . . . . . . . .	L Near	 0177	  _TEXT	
RIght_Array  . . . . . . . . . .	DWord	 0084	  _DATA	
RevHeight  . . . . . . . . . . .	DWord	 0048	  _DATA	
RevWidth . . . . . . . . . . . .	DWord	 004C	  _DATA	
RightSectionCheck  . . . . . . .	L Near	 0338	  _TEXT	
Right_B  . . . . . . . . . . . .	DWord	 0040	  _DATA	
Right_G  . . . . . . . . . . . .	DWord	 0038	  _DATA	
Right_R  . . . . . . . . . . . .	DWord	 0030	  _DATA	
Right_Section_Height . . . . . .	DWord	 0014	  _DATA	
Right_Section  . . . . . . . . .	DWord	 000C	  _DATA	
Right_X  . . . . . . . . . . . .	DWord	 0098	  _DATA	
R  . . . . . . . . . . . . . . .	DWord	 0050	  _DATA	
ScanLine . . . . . . . . . . . .	DWord	 00B0	  _DATA	
Sixteen  . . . . . . . . . . . .	DWord	 00BC	  _DATA	
Sixtyfive  . . . . . . . . . . .	DWord	 00C0	  _DATA	
TEBP . . . . . . . . . . . . . .	DWord	 00B4	  _DATA	
TextureEnd . . . . . . . . . . .	L Near	 03B6	  _TEXT	
Top  . . . . . . . . . . . . . .	DWord	 00A4	  _DATA	
UpdateValues . . . . . . . . . .	L Near	 02AA	  _TEXT	
Vertex_B . . . . . . . . . . . .	Number	 0008h	 
Vertex_G . . . . . . . . . . . .	Number	 000Ch	 
Vertex_R . . . . . . . . . . . .	Number	 0010h	 
Vertex_X . . . . . . . . . . . .	Number	 0000h	 
Vertex_Y . . . . . . . . . . . .	Number	 0004h	 
Where  . . . . . . . . . . . . .	DWord	 00A0	  _DATA	
XWidth . . . . . . . . . . . . .	DWord	 006C	  _DATA	
_RGBTGouraudMMX_Size . . . . . .	DWord	 00C4	  _DATA	Public
_RGBTGouraudMMX_ . . . . . . . .	L Near	 0000	  _TEXT	Public
_VESA_BPSL . . . . . . . . . . .	DWord	 0000	  _DATA	External
dbb  . . . . . . . . . . . . . .	DWord	 0068	  _DATA	
dg . . . . . . . . . . . . . . .	DWord	 0064	  _DATA	
dr . . . . . . . . . . . . . . .	DWord	 005C	  _DATA	
tb . . . . . . . . . . . . . . .	Byte	 0060	  _DATA	

	   0 Warnings
	   0 Errors
