Microsoft (R) Macro Assembler Version 14.15.26730.0	    11/14/18 22:59:19
Imggenr\wobtrnew.asm					     Page 1 - 1


				.686
				.MMX
				.XMM

 00000000			_DATA		SEGMENT	PARA PUBLIC USE32 'DATA'
				align 4
 00000000			TempMMXVar				dq  0
	   0000000000000000
 00000008 00000000		Delta_Left_U            dd  0
 0000000C 00000000		Delta_Left_V            dd  0
 00000010 00000000		Left_U					dd  0
 00000014 00000000		Left_V                  dd  0
 00000018 00000000		Right_U                 dd  0
 0000001C 00000000		Right_V                 dd  0
 00000020 00000000		Delta_Right_U            dd  0
 00000024 00000000		Delta_Right_V            dd  0
 00000028 00000000		du                      dd  0
 0000002C 00000000		dv                      dd  0
 00000030 00000000		lu                      dd  0
 00000034 00000000		lv                      dd  0
 00000038 00000000		ScanLine								dd  0
 0000003C 00000000		PointsList              dd  0
 00000040 00000000		Texture		        			dd  0
 00000044 00000000		x                       dd  0
 00000048 00000000		y								        dd  0
 0000004C 00000000		Tebp       							dd  0
 00000050 00000000		t 						      		dd  0
 00000054 00000000		counter									dd  0
 00000058 000002F7		_WobMMX_Size	dd	ASM_FILE_END - _Grid_Texture_Mapper_TG_
				align 1
				;ScreenWidth							equ 320
				;ScreenHeight						equ 240
				;PointsWidth							equ 40;ScreenWidth/8
				EXTRN _MMXWobNumOfHorizontalBlocks  : DWORD 
				EXTRN _MMXWobNumOfVerticalBlocks  : DWORD 
				EXTRN _MMXWobBlockJump  : DWORD ;(Block Size-1)*ScreenWidth*BPP
				EXTRN _MMXWobBPSL : DWORD 

				;_WobPointsHeight equ 30;ScreenHeight/8
 = 00000000			u												equ 0
 = 00000004			v												equ 4
 = 00000008			RGBA											equ 8
				; rbg - Packed Color
 = 00000010			ElementSize             equ 16
 0000005C			_DATA		ENDS


				.model flat

						PUBLIC	_WobMMX_Size

						PUBLIC	_Grid_Texture_Mapper_TG_

 00000000			_TEXT   SEGMENT PARA PUBLIC 'CODE'
					ASSUME  cs:_TEXT, ds:_DATA

 00000000			_Grid_Texture_Mapper_TG_:
 00000000  89 2D 0000004C R	    mov       [Tebp],ebp
 00000006  89 3D 00000038 R	    mov       [ScanLine],edi
 0000000C  89 0D 00000040 R	    mov       [Texture],ecx
 00000012  89 35 0000003C R	    mov       [PointsList],esi
 00000018  A1 00000000 E		mov eax,[_MMXWobNumOfHorizontalBlocks]
 0000001D  A3 00000044 R		mov [x],eax
 00000022  A1 00000000 E		mov eax,[_MMXWobNumOfVerticalBlocks]
 00000027  A3 00000048 R		mov [y],eax

 0000002C			@@DrawLoop:
 0000002C  8B 3D 00000000 E			mov edi, [_MMXWobNumOfHorizontalBlocks]
 00000032  8B 06				mov eax,[esi+u]
 00000034  47					inc edi
 00000035  8B CF				mov ecx,edi
 00000037  C1 E7 04				shl edi ,4
 0000003A  C1 E1 02				shl ecx,2

 0000003D  8B 5E 04				mov ebx,[esi+v]
 00000040  A3 00000010 R			mov [Left_U],eax
 00000045  03 F9				add edi,ecx
 00000047  89 1D 00000014 R			mov [Left_V],ebx
				;		mov		  ecx,[esi+ElementSize+ElementSize*PointsWidth+u] ; yes, yes , i know it's looks a LITTLE too much , but then , it's concludes in one add in the end ;)
				;		mov		  edx,[esi+ElementSize+ElementSize*PointsWidth+v]
 0000004D  8B 0C 3E				mov		  ecx,[esi+edi+u] ; yes, yes , i know it's looks a LITTLE too much , but then , it's concludes in one add in the end ;)
 00000050  8B 54 3E 04				mov		  edx,[esi+edi+v]
 00000054  2B C8				sub		  ecx,eax
 00000056  2B D3				sub		  edx,ebx
 00000058  C1 F9 03				sar		  ecx,3
 0000005B  8B 46 10				mov		  eax,[esi+ElementSize+u]
 0000005E  C1 FA 03				sar		  edx,3
 00000061  89 0D 00000008 R			mov		  [Delta_Left_U],ecx
 00000067  89 15 0000000C R			mov		  [Delta_Left_V],edx
 0000006D  8B 5E 14				mov		  ebx,[esi+ElementSize+v]
 00000070  A3 00000018 R			mov		  [Right_U],eax
 00000075  89 1D 0000001C R			mov		  [Right_V],ebx
				;		mov		  ecx,[esi+ElementSize*2+ElementSize*PointsWidth+u]
				;		mov		  edx,[esi+ElementSize*2+ElementSize*PointsWidth+v]
 0000007B  8B 4C 3E 10				mov		  ecx,[esi + edi + u + ElementSize]
 0000007F  8B 54 3E 14				mov		  edx,[esi + edi + v + ElementSize]
 00000083  2B C8				sub		  ecx,eax
 00000085  2B D3				sub		  edx,ebx
 00000087  C1 F9 03				sar		  ecx,3
 0000008A  89 0D 00000020 R			mov [Delta_Right_U],ecx
 00000090  89 15 00000024 R			mov [Delta_Right_V],edx

						; MMX stuff
						; MM4 - Left RGBA
						; MM5 - Delta Left RGBA 
						; MM6 - Right RGBA
						; MM7 - Delta Right RGBA 
 00000096  0F 6F 66 08				movq	mm4, [esi + RGBA]			; Left RGBA
 0000009A  0F 6F 6C 3E 08			movq	mm5, [esi + edi + RGBA]		; Bottom Left RGBA
 0000009F  0F F9 EC				psubw	mm5, mm4
 000000A2  0F 71 E5 03				psraw	mm5, 3
 000000A6  0F 6F 76 18				movq    mm6, [esi + ElementSize + RGBA]			; Right RGBA
 000000AA  0F 6F 7C 3E 18			movq    mm7, [esi + edi + ElementSize + RGBA]	; Bottom Right RGBA
 000000AF  0F F9 FE				psubw	mm7, mm6
 000000B2  0F 71 E7 03				psraw	mm7, 3

 000000B6  89 35 0000003C R			mov [PointsList],esi
 000000BC  8B 3D 00000038 R			mov edi,[ScanLine]
 000000C2  C7 05 00000054 R			mov [counter],8
	   00000008
 000000CC				@@Inner8:
							; MMX stuff
							; MM2 - Left RGBA
							; MM3 - Delta RGBA
 000000CC  0F 7F E2					movq	mm2, mm4
 000000CF  0F 7F F3					movq	mm3, mm6
 000000D2  0F F9 DA					psubw   mm3, mm2
 000000D5  0F 71 E3 03					psraw	mm3, 3
 000000D9  A1 00000010 R				mov eax,[Left_U]
 000000DE  8B 1D 00000014 R				mov ebx,[Left_V]
 000000E4  8B 0D 00000018 R				mov ecx,[Right_U]
 000000EA  8B 15 0000001C R				mov edx,[Right_V]
 000000F0  2B C8					sub ecx,eax
 000000F2  2B D3					sub edx,ebx
 000000F4  C1 F9 03					sar ecx,3
 000000F7  BB 00000000					mov ebx,0
 000000FC  C1 FA 03					sar edx,3
 000000FF  89 0D 00000028 R				mov [du],ecx
 00000105  89 15 0000002C R				mov [dv],edx
 0000010B  8B CA					mov ecx, edx 
 0000010D  C1 F9 20					sar ecx, 32
 00000110  83 F1 FF					xor ecx ,-1
 00000113  81 E1 00FF0000				and ecx,00FF0000h
 00000119  BA 00000000					mov edx,0
 0000011E  8A 1D 00000010 R				mov bl,byte ptr [Left_U]
 00000124  C1 E3 18					shl ebx,24
 00000127  8A 3D 00000015 R				mov bh,byte ptr [Left_V+1]
 0000012D  B8 00000000					mov eax,0
 00000132  8A 1D 00000014 R				mov bl,byte ptr [Left_V]
 00000138  A0 00000028 R				mov al,byte ptr [du]
 0000013D  BD 00000000					mov ebp,0
 00000142  C1 E0 18					shl eax,24
 00000145  0B C8					or  ecx,eax
 00000147  8A 15 00000011 R				mov dl,byte ptr [Left_U+1]
 0000014D  8A F7					mov dh,bh
 0000014F  B8 00000000					mov eax,0
 00000154  A0 00000029 R				mov al,byte ptr [du+1]
 00000159  8A 0D 0000002C R				mov cl,byte ptr [dv] ; chk this
 0000015F  8A 2D 0000002D R				mov ch,byte ptr [dv+1] ; chk this
 00000165  8B E8					mov ebp,eax
 00000167  8B 35 00000040 R				mov esi,[Texture]
				; inner loop (unrolled)

				;				mov			eax, [esi+edx*4]
 0000016D  0F 60 04 96						punpcklbw	mm0, [esi+edx*4]
 00000171  B6 00						mov   dh,0
 00000173  0F E4 C2						pmulhuw		mm0, mm2
 00000176  0F 71 D0 08						psrlw		mm0,8
 0000017A  03 D9						add   ebx, ecx
				;				mov   [edi],eax
 0000017C  13 D5						adc   edx, ebp
 0000017E  8A F7						mov   dh, bh
				;				mov   eax, [esi+edx*4]
 00000180  0F 60 0C 96						punpcklbw	mm1, [esi+edx*4]
 00000184  B6 00						mov   dh,0
 00000186  0F E4 CA						pmulhuw		mm1, mm2
 00000189  0F 71 D1 08						psrlw		mm1,8
 0000018D  0F 67 C1						packuswb	mm0,mm1
 00000190  03 D9						add   ebx, ecx
				;				mov   [edi+4],eax
 00000192  0F 7F 07						movq  [edi], mm0
 00000195  13 D5						adc   edx, ebp
 00000197  8A F7						mov   dh, bh

 00000199  0F 60 04 96						punpcklbw	mm0, [esi+edx*4]
 0000019D  B6 00						mov   dh,0
 0000019F  0F E4 C2						pmulhuw		mm0, mm2
 000001A2  0F 71 D0 08						psrlw		mm0,8
 000001A6  03 D9						add   ebx, ecx
 000001A8  13 D5						adc   edx, ebp
 000001AA  8A F7						mov   dh, bh
 000001AC  0F 60 0C 96						punpcklbw	mm1, [esi+edx*4]
 000001B0  B6 00						mov   dh,0
 000001B2  0F E4 CA						pmulhuw		mm1, mm2
 000001B5  0F 71 D1 08						psrlw		mm1,8
 000001B9  0F 67 C1						packuswb	mm0,mm1
 000001BC  03 D9						add   ebx, ecx
 000001BE  0F 7F 47 08						movq  [edi + 8], mm0
 000001C2  13 D5						adc   edx, ebp
 000001C4  8A F7						mov   dh, bh

 000001C6  0F 60 04 96						punpcklbw	mm0, [esi+edx*4]
 000001CA  B6 00						mov   dh,0
 000001CC  0F E4 C2						pmulhuw		mm0, mm2
 000001CF  0F 71 D0 08						psrlw		mm0,8
 000001D3  03 D9						add   ebx, ecx
 000001D5  13 D5						adc   edx, ebp
 000001D7  8A F7						mov   dh, bh
 000001D9  0F 60 0C 96						punpcklbw	mm1, [esi+edx*4]
 000001DD  B6 00						mov   dh,0
 000001DF  0F E4 CA						pmulhuw		mm1, mm2
 000001E2  0F 71 D1 08						psrlw		mm1,8
 000001E6  0F 67 C1						packuswb	mm0,mm1
 000001E9  03 D9						add   ebx, ecx
 000001EB  0F 7F 47 10						movq  [edi+16], mm0
 000001EF  13 D5						adc   edx, ebp
 000001F1  8A F7						mov   dh, bh

 000001F3  0F 60 04 96						punpcklbw	mm0, [esi+edx*4]
 000001F7  B6 00						mov   dh,0
 000001F9  0F E4 C2						pmulhuw		mm0, mm2
 000001FC  0F 71 D0 08						psrlw		mm0,8
 00000200  03 D9						add   ebx, ecx
 00000202  13 D5						adc   edx, ebp
 00000204  8A F7						mov   dh, bh
 00000206  0F 60 0C 96						punpcklbw	mm1, [esi+edx*4]
 0000020A  B6 00						mov   dh,0
 0000020C  0F E4 CA						pmulhuw		mm1, mm2
 0000020F  0F 71 D1 08						psrlw		mm1,8
 00000213  0F 67 C1						packuswb	mm0,mm1
 00000216  03 D9						add   ebx, ecx
 00000218  0F 7F 47 18						movq  [edi+24], mm0
 0000021C  13 D5						adc   edx, ebp
 0000021E  8A F7						mov   dh, bh

				; inner loop end (unrolled)
 00000220  83 EF 20					sub		  edi,32
 00000223  03 3D 00000000 E				add       edi,[_MMXWobBPSL]
 00000229  0F FD E5					paddw	  mm4, mm5		;	Left RGBA
 0000022C  0F FD F7					paddw	  mm6, mm7		;	Left RGBA
 0000022F  A1 00000010 R				mov       eax,[Left_U]
 00000234  8B 1D 00000014 R				mov       ebx,[Left_V]
 0000023A  8B 0D 00000008 R				mov       ecx,[Delta_Left_U]
 00000240  8B 15 0000000C R				mov       edx,[Delta_Left_V]
 00000246  03 C1					add       eax,ecx
 00000248  03 DA					add       ebx,edx
 0000024A  A3 00000010 R				mov       [Left_U],eax
 0000024F  89 1D 00000014 R				mov       [Left_V],ebx
 00000255  8B 1D 0000001C R				mov       ebx,[Right_V]
 0000025B  A1 00000018 R				mov       eax,[Right_U]
 00000260  8B 0D 00000020 R				mov       ecx,[Delta_Right_U]
 00000266  8B 15 00000024 R				mov       edx,[Delta_Right_V]
 0000026C  03 C1					add       eax,ecx
 0000026E  03 DA					add       ebx,edx
 00000270  A3 00000018 R				mov       [Right_U],eax
 00000275  89 1D 0000001C R				mov       [Right_V],ebx
 0000027B  8B 35 00000054 R				mov       esi,[Counter]
 00000281  4E						dec       esi
 00000282  89 35 00000054 R				mov       [Counter],esi
 00000288  0F 85 FFFFFE3E				jne       @@Inner8
 0000028E  A1 00000038 R			mov       eax,[ScanLine]
 00000293  83 C0 20				add       eax,32
 00000296  A3 00000038 R			mov       [ScanLine],eax
 0000029B  8B 35 0000003C R			mov       esi,[PointsList]
 000002A1  8B 1D 00000044 R			mov       ebx,[x]
 000002A7  4B					dec       ebx
 000002A8  89 1D 00000044 R			mov       [x],ebx
 000002AE  0F 85 FFFFFD78		jne       @@DrawLoop
 000002B4  8B 0D 00000000 E			mov		  ecx, [_MMXWobNumOfHorizontalBlocks]
 000002BA  89 0D 00000044 R			mov		  [x],ecx
 000002C0  8B 0D 00000038 R			mov       ecx,[ScanLine]
 000002C6  8B 1D 00000048 R			mov       ebx,[y]
 000002CC  03 0D 00000000 E			add		  ecx, [_MMXWobBlockJump];(8-1)*ScreenWidth*4
 000002D2  83 C6 10				add		  esi,ElementSize
 000002D5  89 35 0000003C R			mov       [PointsList],esi
 000002DB  89 0D 00000038 R			mov       [ScanLine],ecx
 000002E1  4B					dec       ebx
 000002E2  89 1D 00000048 R			mov       [y],ebx
 000002E8  0F 85 FFFFFD3E		jne       @@DrawLoop
 000002EE  8B 2D 0000004C R	    mov       ebp,[Tebp]
 000002F4  0F 77		    emms      
 000002F6  C3			    ret       

 000002F7 = 000002F7		ASM_FILE_END	equ	$

 000002F7			_TEXT		ENDS
				END
Microsoft (R) Macro Assembler Version 14.15.26730.0	    11/14/18 22:59:19
Imggenr\wobtrnew.asm					     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 0000005C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000002F7 Para	  Public  'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

@@DrawLoop . . . . . . . . . . .	L Near	 0000002C _TEXT	
@@Inner8 . . . . . . . . . . . .	L Near	 000000CC _TEXT	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ASM_FILE_END . . . . . . . . . .	Number	 000002F7h   
Delta_Left_U . . . . . . . . . .	DWord	 00000008 _DATA	
Delta_Left_V . . . . . . . . . .	DWord	 0000000C _DATA	
Delta_Right_U  . . . . . . . . .	DWord	 00000020 _DATA	
Delta_Right_V  . . . . . . . . .	DWord	 00000024 _DATA	
ElementSize  . . . . . . . . . .	Number	 00000010h   
Left_U . . . . . . . . . . . . .	DWord	 00000010 _DATA	
Left_V . . . . . . . . . . . . .	DWord	 00000014 _DATA	
PointsList . . . . . . . . . . .	DWord	 0000003C _DATA	
RGBA . . . . . . . . . . . . . .	Number	 00000008h   
Right_U  . . . . . . . . . . . .	DWord	 00000018 _DATA	
Right_V  . . . . . . . . . . . .	DWord	 0000001C _DATA	
ScanLine . . . . . . . . . . . .	DWord	 00000038 _DATA	
Tebp . . . . . . . . . . . . . .	DWord	 0000004C _DATA	
TempMMXVar . . . . . . . . . . .	QWord	 00000000 _DATA	
Texture  . . . . . . . . . . . .	DWord	 00000040 _DATA	
_Grid_Texture_Mapper_TG_ . . . .	L Near	 00000000 _TEXT	Public
_MMXWobBPSL  . . . . . . . . . .	DWord	 00000000 _DATA	External
_MMXWobBlockJump . . . . . . . .	DWord	 00000000 _DATA	External
_MMXWobNumOfHorizontalBlocks . .	DWord	 00000000 _DATA	External
_MMXWobNumOfVerticalBlocks . . .	DWord	 00000000 _DATA	External
_WobMMX_Size . . . . . . . . . .	DWord	 00000058 _DATA	Public
counter  . . . . . . . . . . . .	DWord	 00000054 _DATA	
du . . . . . . . . . . . . . . .	DWord	 00000028 _DATA	
dv . . . . . . . . . . . . . . .	DWord	 0000002C _DATA	
lu . . . . . . . . . . . . . . .	DWord	 00000030 _DATA	
lv . . . . . . . . . . . . . . .	DWord	 00000034 _DATA	
t  . . . . . . . . . . . . . . .	DWord	 00000050 _DATA	
u  . . . . . . . . . . . . . . .	Number	 00000000h   
v  . . . . . . . . . . . . . . .	Number	 00000004h   
x  . . . . . . . . . . . . . . .	DWord	 00000044 _DATA	
y  . . . . . . . . . . . . . . .	DWord	 00000048 _DATA	

	   0 Warnings
	   0 Errors
