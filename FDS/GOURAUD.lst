Microsoft (R) Macro Assembler Version 10.00.30319.01	    07/08/11 23:14:43
C:\Projects\REVIVAL\FDS\FILLERS\GOURAUD.ASM		     Page 1 - 1


				.686
				.MMX
				.XMM
 00000000			_DATA   SEGMENT DWORD PUBLIC 'DATA'
				align 4
 00000000 00000000		Left_Section            dd 0
 00000004 00000000		Right_Section           dd 0
 00000008 00000000		Left_Section_Height     dd 0
 0000000C 00000000		Right_Section_Height    dd 0
 00000010 00000000		Left_R              dd 0.0 ; float
 00000014 00000000		Delta_left_R            dd 0.0 ; float
 00000018 00000000		Left_G              dd 0.0 ; float
 0000001C 00000000		Delta_left_G            dd 0.0 ; float
 00000020 00000000		Left_B                  dd 0.0 ; float
 00000024 00000000		Delta_left_B            dd 0.0 ; float
 00000028 00000000		Right_R                 dd 0.0 ; float
 0000002C 00000000		Delta_right_R           dd 0.0 ; float
 00000030 00000000		Right_G                 dd 0.0 ; float
 00000034 00000000		Delta_right_G           dd 0.0 ; float
 00000038 00000000		Right_B                 dd 0.0 ; float
 0000003C 00000000		Delta_right_B           dd 0.0 ; float
 00000040 00000000		RevHeight               dd 0.0 ; float
 00000044 00000000		RevWidth                dd 0.0 ; float
 00000048 00000000		R                       dd 0
 0000004C 00000000		G                       dd 0
 00000050 00000000		B                       dd 0
 00000054 00000000		dr              dd 0
 00000058  00000004 [		tb      db 4 dup(0)
	    00
	   ]
 0000005C 00000000		dg                      dd 0
 00000060 00000000		dbb                     dd 0
 00000064 00000000		XWidth          dd 0
 00000068 00000000		Height          dd 0
 0000006C 00000000		Longest         dd 0
 00000070  00000003 [		Left_Array              dd 3 dup(0)
	    00000000
	   ]
 0000007C  00000003 [		RIght_Array             dd 3 dup(0)
	    00000000
	   ]
 00000088 00000000		Left_X          dd 0
 0000008C 00000000		Delta_Left_X        dd 0
 00000090 00000000		Right_X         dd 0
 00000094 00000000		Delta_Right_X       dd 0
 00000098 00000000		Where                   dd 0
 0000009C 00000000		Top                     dd 0
 000000A0 00000000		Middle                  dd 0
 000000A4 00000000		Bottom                  dd 0
 000000A8 00000000		ScanLine        dd 0
 000000AC 00000000		TEBP            dd 0
 = 00000000			Vertex_X  equ 0
 = 00000004			Vertex_Y  equ 4
 = 00000010			Vertex_R  equ 16
 = 0000000C			Vertex_G  equ 12
 = 00000008			Vertex_B  equ 8
 000000B0 3F800000		One       dd  1.0
 000000B4 3F800000		Sixteen   dd  1.0
 000000B8 43800000		Sixtyfive dd  256.0
 000000BC 000004F2		_RGBGouraud_Size	dd	ASM_FILE_END - _RGBGouraud_
				EXTRN           _VESA_BPSL:dword
				align 1
 00C0				_DATA   ENDS

 00000000			_TEXT   SEGMENT BYTE PUBLIC 'CODE'
					ASSUME  cs:_TEXT, ds:_DATA

					PUBLIC  _RGBGouraud_Size

					PUBLIC  _RGBGouraud_
 00000000			_RGBGouraud_:
 00000000  89 2D 000000AC R	mov [TEBP],ebp

				;vtx in ebx , where in ecx

 00000006  89 0D 00000098 R	mov [Where],ecx

 0000000C  8B CB		mov ecx,ebx
 0000000E  8B F3		mov esi,ebx
 00000010  8B FB		mov edi,ebx
 00000012  83 C6 14		add esi,20
 00000015  83 C7 28		add edi,40

				;ecx - vertex 1
				;esi - vertex 2
				;edi - vertex 3

 00000018  8B 41 04		mov eax,[ecx+Vertex_Y]
 0000001B  3B 46 04		cmp eax,[esi+Vertex_Y]
 0000001E  7E 02		jle @@sort1
 00000020  87 CE		xchg ecx,esi
 00000022			@@sort1:
 00000022  8B 41 04		mov eax,[ecx+Vertex_Y]
 00000025  3B 47 04		cmp eax,[edi+Vertex_Y]
 00000028  7E 02		jle @@sort2
 0000002A  87 CF		xchg ecx,edi
 0000002C			@@sort2:
 0000002C  8B 46 04		mov eax,[esi+Vertex_Y]
 0000002F  3B 47 04		cmp eax,[edi+Vertex_Y]
 00000032  7E 02		jle @@sort3
 00000034  87 F7		xchg esi,edi
 00000036			@@sort3:

 00000036  8B 5F 04		mov ebx,[edi+Vertex_Y]
 00000039  2B 59 04		sub ebx,[ecx+Vertex_Y]
 0000003C  0F 84 00000377	jz TextureEnd

				;    int temp = ((v2->y - v1->y) << 16) / height;
				;    int longest = temp * (v3->x - v1->x) + ((v1->x - v2->x) << 16);
				;eax-longest

 00000042  8B 46 04		mov eax,[esi+Vertex_Y]
 00000045  8B 29		mov ebp,[ecx+Vertex_X]
 00000047  2B 41 04		sub eax,[ecx+Vertex_Y]
 0000004A  2B 2E		sub ebp,[esi+Vertex_X]
 0000004C  C1 E0 10		sal eax,16
 0000004F  C1 E5 10		sal ebp,16
 00000052  8B D0		mov edx,eax
 00000054  C1 FA 1F		sar edx,31
 00000057  F7 FB		idiv ebx
 00000059  8B 1F		mov ebx,[edi+Vertex_X]
 0000005B  2B 19		sub ebx,[ecx+Vertex_X]
 0000005D  F7 EB		imul ebx
 0000005F  03 C5		add eax,ebp
 00000061  A3 0000006C R	mov [Longest],eax
 00000066  0F 84 0000034D	jz TextureEnd
 0000006C  7D 7D		jge LongestOverZero


 0000006E  89 0D 0000009C R	mov [Top],ecx
 00000074  8B E9		mov ebp,ecx
 00000076  89 35 000000A0 R	mov [Middle],esi
 0000007C  89 3D 000000A4 R	mov [Bottom],edi
 00000082  89 3D 0000007C R	mov [Right_Array],edi
 00000088  89 35 00000080 R	mov [Right_Array+4],esi
 0000008E  89 0D 00000084 R	mov [Right_Array+8],ecx
 00000094  C7 05 00000004 R	mov [Right_Section],2
	   00000002

 0000009E  89 3D 00000070 R	mov [Left_Array],edi
 000000A4  89 0D 00000074 R	mov [Left_Array+4],ecx
 000000AA  C7 05 00000000 R	mov [Left_Section],1
	   00000001

 000000B4  E8 00000307		call CalcLeftSection
 000000B9  83 FB 00		cmp ebx,0
 000000BC  0F 8E 000002F7	jle TextureEnd

 000000C2  E8 00000392		call CalcRightSection
 000000C7  83 FB 00		cmp ebx,0
 000000CA  0F 8F 00000092	jg FLSNZ  ; First Right Section Is Not Zero
 000000D0  A1 00000004 R	mov eax,[Right_Section]
 000000D5  48			dec eax
 000000D6  A3 00000004 R	mov [Right_Section],eax
 000000DB  E8 00000379		call CalcRightSection
 000000E0  83 FB 00		cmp ebx,0
 000000E3  0F 8E 000002D0	jle TextureEnd
 000000E9  EB 77		jmp FLSNZ

 000000EB			LongestOverZero:
 000000EB  89 0D 0000009C R	mov [Top],ecx
 000000F1  8B E9		mov ebp,ecx
 000000F3  89 35 000000A0 R	mov [Middle],esi
 000000F9  89 3D 000000A4 R	mov [Bottom],edi
 000000FF  89 3D 00000070 R	mov [Left_Array],edi
 00000105  89 35 00000074 R	mov [Left_Array+4],esi
 0000010B  89 0D 00000078 R	mov [Left_Array+8],ecx
 00000111  C7 05 00000000 R	mov [Left_Section],2
	   00000002

 0000011B  89 3D 0000007C R	mov [Right_Array],edi
 00000121  89 0D 00000080 R	mov [Right_Array+4],ecx
 00000127  C7 05 00000004 R	mov [Right_Section],1
	   00000001

 00000131  E8 00000323		call CalcRightSection
 00000136  83 FB 00		cmp ebx,0
 00000139  0F 8E 0000027A	jle TextureEnd

 0000013F  E8 0000027C		call CalcLeftSection
 00000144  83 FB 00		cmp ebx,0
 00000147  7F 19		jg FLSNZ  ; First Left Section Is Not Zero
 00000149  A1 00000000 R	mov eax,[Left_Section]
 0000014E  48			dec eax
 0000014F  A3 00000000 R	mov [Left_Section],eax
 00000154  E8 00000267		call CalcLeftSection
 00000159  83 FB 00		cmp ebx,0
 0000015C  0F 8E 00000257	jle TextureEnd
 00000162			FLSNZ:

 00000162  8B 7D 04		mov edi,[ebp+vertex_y]
 00000165  A1 00000000 E	mov eax,[_VESA_BPSL]
 0000016A  F7 E7		mul edi
 0000016C  03 05 00000098 R	add eax,[Where]
 00000172  A3 000000A8 R	mov [ScanLine],eax

				;mov edi,[ebp+vertex_y]
				;mov edx,edi
				;sal edi,8
				;sal edx,10
				;add edi,[Where]
				;add edi,edx
				;mov [ScanLine],edi

 00000177			OuterLoop:
				;Inner Loop Start Here
 00000177  A1 00000088 R	mov eax,[Left_X]
 0000017C  8B 35 00000090 R	mov esi,[Right_X]
 00000182  C1 F8 10		sar eax,16
 00000185  8B 3D 000000A8 R	mov edi,[ScanLine]
 0000018B  C1 FE 10		sar esi,16
 0000018E  2B F0		sub esi,eax
 00000190  46			inc esi
 00000191  0F 8E 00000116	jle UpdateValues
 00000197  D9 05 000000B4 R	FLD dword ptr [Sixteen]
 0000019D  89 35 00000064 R	mov [XWidth],esi
 000001A3  DB 05 00000064 R	FILD dword ptr [XWidth]
 000001A9  DE F9		FDIV                ;ST(6) - 1.0/Width
 000001AB  D9 05 000000B8 R	FLD dword ptr [SixtyFive]
 000001B1  DE C9		FMUL
 000001B3  D9 05 00000010 R	FLD dword ptr [Left_R]   ;ST(5)
 000001B9  D9 05 00000018 R	FLD dword ptr [Left_G]   ;ST(4)
 000001BF  D9 05 00000020 R	FLD dword ptr [Left_B]   ;ST(3)
 000001C5  D9 05 00000028 R	FLD dword ptr [Right_R]  ;ST(2)
 000001CB  D9 05 00000030 R	FLD dword ptr [Right_G]  ;ST(1)
 000001D1  D9 05 00000038 R	FLD dword ptr [Right_B]  ;ST(0)
 000001D7  D8 E3		FSUB ST(0),ST(3) ;ST(1) = Delta B
 000001D9  D9 C9		FXCH ST(1)
 000001DB  D8 E4		FSUB ST(0),ST(4) ;ST(2) = Delta G
 000001DD  D9 CA		FXCH ST(2)
 000001DF  D8 E5		FSUB ST(0),ST(5) ;ST(0) = Delta R
 000001E1  D8 CE		FMUL ST(0),ST(6)
 000001E3  D9 CA		FXCH ST(2)
 000001E5  D8 CE		FMUL ST(0),ST(6)
 000001E7  D9 C9		FXCH ST(1)
 000001E9  D8 CE		FMUL ST(0),ST(6)
 000001EB  DD C6		FFREE ST(6)
 000001ED  DB 1D 00000060 R	FISTP dword ptr [dbb]
 000001F3  DB 1D 0000005C R	FISTP dword ptr [dg]
 000001F9  DB 1D 00000054 R	FISTP dword ptr [dr]
 000001FF  8D 3C 87		lea edi,[edi+eax*4]
				;FLD One
				;FDIV ST(0),ST(6)
				;mov cl,[Edi]
 00000202  D9 05 000000B8 R	FLD dword ptr [SixtyFive]
 00000208  D9 C0		FLD ST(0)
 0000020A  D8 CC		FMUL ST(0),ST(4)
 0000020C  DB 1D 00000048 R	FISTP dword ptr [R]
 00000212  D9 C0		FLD ST(0)
 00000214  D8 CB		FMUL ST(0),ST(3)
 00000216  DB 1D 0000004C R	FISTP dword ptr [G]
 0000021C  D8 C9		FMUL ST(0),ST(1)
 0000021E  DB 1D 00000050 R	FISTP dword ptr [B]

				;Left R   ST(5)
				;Left G   ST(4)
				;Left B   ST(3)
				;Delta R  ST(2)
				;Delta G  ST(1)
				;Delta B  ST(0)
				comment &
				FXCH ST(3)  ;ST(0) = B    ST(3) = Delta B
				FADD ST(0),ST(3)
				FXCH ST(1)  ;ST(0) = Delta G    ST(1) = B
				FXCH ST(4)  ;ST(0) = G    ST(4) = Delta G
				FADD ST(0),ST(4)
				FXCH ST(2)  ;ST(0) = Delta R    ST(2) = G
				FXCH ST(5)  ;ST(0) = R    ST(5) = Delta R
				FADD ST(0),ST(5)

				;Delta R  ST(5)
				;Delta G  ST(4)
				;Delta B  ST(3)
				;Left R   ST(2)
				;Left G   ST(1)
				;Left B   ST(0)
				&

 00000224			InnerOuterLoop:

				;Delta Z  ST(5)
				;Delta U  ST(4)
				;Delta V  ST(3)
				;Left U   ST(2)
				;Left V   ST(1)
				;Left Z   ST(0)

				comment &
				Registers| 31 - 24 | 23 - 16 | 15 - 8  |  7 - 0  |
				--------------------------------------------------
				EAX      | frac R  |000000000| int G   | frac G  |
				--------------------------------------------------
				EBX      | frac DR |000000000| int DG  | frac DG |
				--------------------------------------------------
				ECX      |000000000| int B   | frac B  | int R   |
				--------------------------------------------------
				EDX      |000000000|000000000|000000000|000000000|
				--------------------------------------------------
				EDI      | C0000uuuuuuuuuuuuuuuuuuuuuuuuuuuunter |
				--------------------------------------------------
				ESI      |000000000| int DB  | frac DB | int DR  |
				--------------------------------------------------
				EBP      | Screeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeen |
				--------------------------------------------------
				&
				; The preperations are made for 8.8 fixed point!!!

 00000224  A1 00000054 R	mov eax,[dr]
 00000229  8B 1D 0000005C R	mov ebx,[dg]
 0000022F  8B 0D 00000060 R	mov ecx,[dbb]
 00000235  29 05 00000048 R	sub [r],eax
 0000023B  29 1D 0000004C R	sub [g],ebx
 00000241  29 0D 00000050 R	sub [b],ecx
 00000247  8D 2C B7		lea ebp,[edi+esi*4]
 0000024A  8B FE		mov edi,esi
 0000024C  C1 E7 02		shl edi,2
 0000024F  8B 1D 00000060 R	mov ebx,[dbb]
 00000255  C1 E3 08		shl ebx,8
 00000258  83 F7 FF		xor edi,-1
 0000025B  8A 1D 00000055 R	mov bl,byte ptr [dr+1]
 00000261  47			inc edi
 00000262  8B F3		mov esi,ebx
 00000264  A0 00000048 R	mov al,byte ptr [r]
 00000269  C1 E0 18		shl eax,24
 0000026C  8B 1D 0000005C R	mov ebx,[dg]
 00000272  C1 C3 08		rol ebx,8
 00000275  A1 0000004C R	mov eax,[g]
 0000027A  8A 1D 00000054 R	mov bl,byte ptr [dr]
 00000280  8B 0D 00000050 R	mov ecx,[b]
 00000286  C1 E1 08		shl ecx,8
 00000289  8A 0D 00000049 R	mov cl,byte ptr [r+1]
 0000028F  C1 CB 08		ror ebx,8
 00000292  8A D5		mov dl,ch

 00000294			@@InnerLoop:    ;Ehrlich/Diffuse R/G/B Gouraud Inner Loop

 00000294  03 C3			add eax,ebx
 00000296  8A EA			mov ch,dl

 00000298  13 CE			adc ecx,esi
 0000029A  83 C7 04			add edi,4

 0000029D  8A D5			mov dl,ch
 0000029F  8A EC			mov ch,ah

 000002A1  89 4C 3D FC			mov [edi+ebp-4],ecx
 000002A5  75 ED			jnz @@InnerLoop

				comment &
				;mov esi,[BitMap]
				;mov [Xwidth],eax
				lea edi,[edi+esi*4]
				shl esi,2
				mov eax,[R]
				xor esi,-1
				mov ebx,[G]
				inc esi
				mov ecx,[B]
				sub eax,[dr]
				sub ebx,[dg]
				sub ecx,[dbb]

				@@Inner:
				add eax,[dr]
				add ebx,[dg]
				add ecx,[dbb]
				mov dh,ah
				shl edx,8
				mov dh,bh
				mov dl,ch
				mov [edi+esi],edx
				add esi,4
				jnz @@Inner
				&
 000002A7  DD C0		FFREE ST(0)
 000002A9  DD C1		FFREE ST(1)
 000002AB  DD C2		FFREE ST(2)

				;Inner Loop End Here

 000002AD			UpdateValues:
 000002AD  A1 000000A8 R	mov eax,[ScanLine]
 000002B2  8B 1D 00000008 R	mov ebx,[Left_Section_Height]
 000002B8  03 05 00000000 E	add eax, [_VESA_BPSL]
 000002BE  4B			dec ebx
 000002BF  A3 000000A8 R	mov [ScanLine],eax
 000002C4  89 1D 00000008 R	mov [Left_Section_Height],ebx
 000002CA  7F 23		jg @@Update_Left_UVXZ
 000002CC  8B 1D 00000000 R	mov ebx,[Left_Section]
 000002D2  4B			dec ebx
 000002D3  0F 8E 000000E0	jle TextureEnd
 000002D9  89 1D 00000000 R	mov [Left_Section],ebx
 000002DF  E8 000000DC		call CalcLeftSection
 000002E4  83 FB 00		cmp ebx,0
 000002E7  0F 8E 000000CC	jle TextureEnd
 000002ED  EB 4C		jmp RightSectionCheck
 000002EF			@@Update_Left_UVXZ:
 000002EF  D9 05 00000010 R	FLD dword ptr [Left_R]
 000002F5  D9 05 00000018 R	FLD dword ptr [Left_G]
 000002FB  D9 C9		FXCH ST(1)
 000002FD  D8 05 00000014 R	FADD dword ptr [Delta_Left_R]
 00000303  D9 C9		FXCH ST(1)
 00000305  D8 05 0000001C R	FADD [Delta_Left_G]
 0000030B  D9 C9		FXCH ST(1)
 0000030D  D9 1D 00000010 R	FSTP dword ptr [Left_R]
 00000313  D9 1D 00000018 R	FSTP dword ptr [Left_G]

 00000319  D9 05 00000020 R	FLD dword ptr [Left_B]
 0000031F  A1 00000088 R	mov eax,[Left_X]
 00000324  D8 05 00000024 R	FADD dword ptr [Delta_Left_B]
 0000032A  03 05 0000008C R	add eax,[Delta_Left_X]
 00000330  D9 1D 00000020 R	FSTP dword ptr [Left_B]
 00000336  A3 00000088 R	mov [Left_X],eax

 0000033B			RightSectionCheck:
 0000033B  8B 1D 0000000C R	mov ebx,[Right_Section_Height]
 00000341  4B			dec ebx
 00000342  89 1D 0000000C R	mov [Right_Section_Height],ebx
 00000348  7F 1E		jg @@Update_Right_UVXZ
 0000034A  8B 1D 00000004 R	mov ebx,[Right_Section]
 00000350  4B			dec ebx
 00000351  7E 66		jle TextureEnd
 00000353  89 1D 00000004 R	mov [Right_Section],ebx
 00000359  E8 000000FB		call CalcRightSection
 0000035E  83 FB 00		cmp ebx,0
 00000361  7E 56		jle TextureEnd
 00000363  E9 FFFFFE0F		jmp OuterLoop

 00000368			@@Update_Right_UVXZ:
 00000368  D9 05 00000028 R	FLD dword ptr [Right_R]
 0000036E  D9 05 00000030 R	FLD dword ptr [Right_G]
 00000374  D9 C9		FXCH ST(1)
 00000376  D8 05 0000002C R	FADD dword ptr [Delta_Right_R]
 0000037C  D9 C9		FXCH ST(1)
 0000037E  D8 05 00000034 R	FADD [Delta_Right_G]
 00000384  D9 C9		FXCH ST(1)
 00000386  D9 1D 00000028 R	FSTP dword ptr [Right_R]
 0000038C  D9 1D 00000030 R	FSTP dword ptr [Right_G]

 00000392  D9 05 00000038 R	FLD dword ptr [Right_B]
 00000398  A1 00000090 R	mov eax,[Right_X]
 0000039D  D8 05 0000003C R	FADD dword ptr [Delta_Right_B]
 000003A3  03 05 00000094 R	add eax,[Delta_Right_X]
 000003A9  D9 1D 00000038 R	FSTP dword ptr [Right_B]
 000003AF  A3 00000090 R	mov [Right_X],eax

 000003B4  E9 FFFFFDBE		jmp OuterLoop

 000003B9			TextureEnd:
 000003B9  8B 2D 000000AC R	mov ebp,[Tebp]
 000003BF  C3			ret

 000003C0			CalcLeftSection proc near

 000003C0  A1 00000000 R	mov eax,[Left_Section]
 000003C5  8B 0C 85		mov ecx,[Left_Array+eax*4]
	   00000070 R
 000003CC  83 E8 01		sub eax,1
 000003CF  8B 34 85		mov esi,[Left_Array+eax*4]
	   00000070 R
 000003D6  8B 5E 04		mov ebx,[esi+Vertex_Y]
 000003D9  2B 59 04		sub ebx,[ecx+Vertex_Y]
 000003DC  74 74		jz @@CLSend
 000003DE  89 1D 00000068 R	mov [Height],ebx
 000003E4  8B 11		mov edx,[ecx+Vertex_X]
 000003E6  DB 05 00000068 R	FILD dword ptr [Height]
 000003EC  C1 E2 10		sal edx,16
 000003EF  8B 06		mov eax,[esi+Vertex_X]
 000003F1  2B 01		sub eax,[ecx+Vertex_X]
 000003F3  D9 05 000000B0 R	FLD dword ptr [One]
 000003F9  C1 E0 10		sal eax,16
 000003FC  89 15 00000088 R	mov [left_x],edx
 00000402  8B D0		mov edx,eax
 00000404  DE F1		FDIVR
 00000406  C1 FA 1F		sar edx,31
 00000409  F7 FB		idiv ebx
 0000040B  D9 46 10		FLD dword ptr [esi+Vertex_R]
 0000040E  A3 0000008C R	mov [Delta_Left_X],eax
 00000413  D9 41 10		FLD dword ptr [ecx+Vertex_R]
 00000416  D9 15 00000010 R	FST [Left_R]
 0000041C  DE E9		FSUB
 0000041E  D8 C9		FMUL ST,ST(1)
 00000420  D9 1D 00000014 R	FSTP dword ptr [Delta_Left_R]

 00000426  D9 46 0C		FLD dword ptr [esi+Vertex_G]
 00000429  D9 41 0C		FLD dword ptr [ecx+Vertex_G]
 0000042C  D9 15 00000018 R	FST [Left_G]
 00000432  DE E9		FSUB
 00000434  D8 C9		FMUL ST,ST(1)
 00000436  D9 1D 0000001C R	FSTP dword ptr [Delta_Left_G]

 0000043C  D9 46 08		FLD dword ptr [esi+Vertex_B]
 0000043F  D9 41 08		FLD dword ptr [ecx+Vertex_B]
 00000442  D9 15 00000020 R	FST [Left_B]
 00000448  DE E9		FSUB
 0000044A  DE C9		FMUL
 0000044C  D9 1D 00000024 R	FSTP dword ptr [Delta_Left_B]
 00000452			@@CLSend:
 00000452  89 1D 00000008 R	mov [Left_Section_Height],ebx
 00000458  C3				ret
 00000459			CalcLeftSection endp



 00000459			CalcRightSection proc near

 00000459  A1 00000004 R	mov eax,[Right_Section]
 0000045E  8B 0C 85		mov ecx,[Right_Array+eax*4]
	   0000007C R
 00000465  83 E8 01		sub eax,1
 00000468  8B 34 85		mov esi,[Right_Array+eax*4]
	   0000007C R
 0000046F  8B 5E 04		mov ebx,[esi+Vertex_Y]
 00000472  2B 59 04		sub ebx,[ecx+Vertex_Y]
 00000475  74 74		jz @@CRSend
 00000477  89 1D 00000068 R	mov [Height],ebx
 0000047D  8B 11		mov edx,[ecx+Vertex_X]
 0000047F  DB 05 00000068 R	FILD dword ptr [Height]
 00000485  C1 E2 10		sal edx,16
 00000488  8B 06		mov eax,[esi+Vertex_X]
 0000048A  2B 01		sub eax,[ecx+Vertex_X]
 0000048C  D9 05 000000B0 R	FLD dword ptr [One]
 00000492  C1 E0 10		sal eax,16
 00000495  89 15 00000090 R	mov [Right_X],edx
 0000049B  8B D0		mov edx,eax
 0000049D  DE F1		FDIVR
 0000049F  C1 FA 1F		sar edx,31
 000004A2  F7 FB		idiv ebx
 000004A4  D9 46 10		FLD dword ptr [esi+Vertex_R]
 000004A7  A3 00000094 R	mov [Delta_Right_X],eax
 000004AC  D9 41 10		FLD dword ptr [ecx+Vertex_R]
 000004AF  D9 15 00000028 R	FST [Right_R]
 000004B5  DE E9		FSUB
 000004B7  D8 C9		FMUL ST,ST(1)
 000004B9  D9 1D 0000002C R	FSTP dword ptr [Delta_Right_R]

 000004BF  D9 46 0C		FLD dword ptr [esi+Vertex_G]
 000004C2  D9 41 0C		FLD dword ptr [ecx+Vertex_G]
 000004C5  D9 15 00000030 R	FST [Right_G]
 000004CB  DE E9		FSUB
 000004CD  D8 C9		FMUL ST,ST(1)
 000004CF  D9 1D 00000034 R	FSTP dword ptr [Delta_Right_G]

 000004D5  D9 46 08		FLD dword ptr [esi+Vertex_B]
 000004D8  D9 41 08		FLD dword ptr [ecx+Vertex_B]
 000004DB  D9 15 00000038 R	FST [Right_B]
 000004E1  DE E9		FSUB
 000004E3  DE C9		FMUL
 000004E5  D9 1D 0000003C R	FSTP dword ptr [Delta_Right_B]
 000004EB			@@CRSend:
 000004EB  89 1D 0000000C R	mov [Right_Section_Height],ebx
 000004F1  C3				ret
 000004F2			CalcRightSection endp

 000004F2 = 000004F2		ASM_FILE_END	equ	$

 04F2				_TEXT   ENDS

				END
Microsoft (R) Macro Assembler Version 10.00.30319.01	    07/08/11 23:14:43
C:\Projects\REVIVAL\FDS\FILLERS\GOURAUD.ASM		     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

_DATA  . . . . . . . . . . . . .	32 Bit	 00C0	  DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 04F2	  Byte	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CalcLeftSection  . . . . . . . .	P Near	 03C0	  _TEXT	Length= 0099 Public
  @@CLSend . . . . . . . . . . .	L Near	 0452	  _TEXT	
CalcRightSection . . . . . . . .	P Near	 0459	  _TEXT	Length= 0099 Public
  @@CRSend . . . . . . . . . . .	L Near	 04EB	  _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@@InnerLoop  . . . . . . . . . .	L Near	 0294	  _TEXT	
@@Update_Left_UVXZ . . . . . . .	L Near	 02EF	  _TEXT	
@@Update_Right_UVXZ  . . . . . .	L Near	 0368	  _TEXT	
@@sort1  . . . . . . . . . . . .	L Near	 0022	  _TEXT	
@@sort2  . . . . . . . . . . . .	L Near	 002C	  _TEXT	
@@sort3  . . . . . . . . . . . .	L Near	 0036	  _TEXT	
ASM_FILE_END . . . . . . . . . .	Number	 04F2h	 
Bottom . . . . . . . . . . . . .	DWord	 00A4	  _DATA	
B  . . . . . . . . . . . . . . .	DWord	 0050	  _DATA	
Delta_Left_X . . . . . . . . . .	DWord	 008C	  _DATA	
Delta_Right_X  . . . . . . . . .	DWord	 0094	  _DATA	
Delta_left_B . . . . . . . . . .	DWord	 0024	  _DATA	
Delta_left_G . . . . . . . . . .	DWord	 001C	  _DATA	
Delta_left_R . . . . . . . . . .	DWord	 0014	  _DATA	
Delta_right_B  . . . . . . . . .	DWord	 003C	  _DATA	
Delta_right_G  . . . . . . . . .	DWord	 0034	  _DATA	
Delta_right_R  . . . . . . . . .	DWord	 002C	  _DATA	
FLSNZ  . . . . . . . . . . . . .	L Near	 0162	  _TEXT	
G  . . . . . . . . . . . . . . .	DWord	 004C	  _DATA	
Height . . . . . . . . . . . . .	DWord	 0068	  _DATA	
InnerOuterLoop . . . . . . . . .	L Near	 0224	  _TEXT	
Left_Array . . . . . . . . . . .	DWord	 0070	  _DATA	
Left_B . . . . . . . . . . . . .	DWord	 0020	  _DATA	
Left_G . . . . . . . . . . . . .	DWord	 0018	  _DATA	
Left_R . . . . . . . . . . . . .	DWord	 0010	  _DATA	
Left_Section_Height  . . . . . .	DWord	 0008	  _DATA	
Left_Section . . . . . . . . . .	DWord	 0000	  _DATA	
Left_X . . . . . . . . . . . . .	DWord	 0088	  _DATA	
LongestOverZero  . . . . . . . .	L Near	 00EB	  _TEXT	
Longest  . . . . . . . . . . . .	DWord	 006C	  _DATA	
Middle . . . . . . . . . . . . .	DWord	 00A0	  _DATA	
One  . . . . . . . . . . . . . .	DWord	 00B0	  _DATA	
OuterLoop  . . . . . . . . . . .	L Near	 0177	  _TEXT	
RIght_Array  . . . . . . . . . .	DWord	 007C	  _DATA	
RevHeight  . . . . . . . . . . .	DWord	 0040	  _DATA	
RevWidth . . . . . . . . . . . .	DWord	 0044	  _DATA	
RightSectionCheck  . . . . . . .	L Near	 033B	  _TEXT	
Right_B  . . . . . . . . . . . .	DWord	 0038	  _DATA	
Right_G  . . . . . . . . . . . .	DWord	 0030	  _DATA	
Right_R  . . . . . . . . . . . .	DWord	 0028	  _DATA	
Right_Section_Height . . . . . .	DWord	 000C	  _DATA	
Right_Section  . . . . . . . . .	DWord	 0004	  _DATA	
Right_X  . . . . . . . . . . . .	DWord	 0090	  _DATA	
R  . . . . . . . . . . . . . . .	DWord	 0048	  _DATA	
ScanLine . . . . . . . . . . . .	DWord	 00A8	  _DATA	
Sixteen  . . . . . . . . . . . .	DWord	 00B4	  _DATA	
Sixtyfive  . . . . . . . . . . .	DWord	 00B8	  _DATA	
TEBP . . . . . . . . . . . . . .	DWord	 00AC	  _DATA	
TextureEnd . . . . . . . . . . .	L Near	 03B9	  _TEXT	
Top  . . . . . . . . . . . . . .	DWord	 009C	  _DATA	
UpdateValues . . . . . . . . . .	L Near	 02AD	  _TEXT	
Vertex_B . . . . . . . . . . . .	Number	 0008h	 
Vertex_G . . . . . . . . . . . .	Number	 000Ch	 
Vertex_R . . . . . . . . . . . .	Number	 0010h	 
Vertex_X . . . . . . . . . . . .	Number	 0000h	 
Vertex_Y . . . . . . . . . . . .	Number	 0004h	 
Where  . . . . . . . . . . . . .	DWord	 0098	  _DATA	
XWidth . . . . . . . . . . . . .	DWord	 0064	  _DATA	
_RGBGouraud_Size . . . . . . . .	DWord	 00BC	  _DATA	Public
_RGBGouraud_ . . . . . . . . . .	L Near	 0000	  _TEXT	Public
_VESA_BPSL . . . . . . . . . . .	DWord	 0000	  _DATA	External
dbb  . . . . . . . . . . . . . .	DWord	 0060	  _DATA	
dg . . . . . . . . . . . . . . .	DWord	 005C	  _DATA	
dr . . . . . . . . . . . . . . .	DWord	 0054	  _DATA	
tb . . . . . . . . . . . . . . .	Byte	 0058	  _DATA	

	   0 Warnings
	   0 Errors
